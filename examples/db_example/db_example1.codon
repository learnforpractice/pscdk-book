from chain.database import TableI64
from chain.contract import Contract

@packer
class A(object):
    a: u64
    b: str
    def __init__(self, a: u64, b: str):
        self.a = a
        self.b = b

    def get_primary(self) -> u64:
        return self.a

@contract(main=True)
class MyContract(Contract):

    def __init__(self):
        super().__init__()

    @action('test')
    def test(self):
        print('db_test')
        item = A(123u64, 'hello, world')
        table = TableI64[A](n'hello', n'', n'mytable')
        table.store(item, n'hello')

@export
def apply(receiver: u64, first_receiver: u64, action: u64) -> None:
    from C import __init_codon__() -> i32
    __init_codon__()
    c = MyContract(receiver, first_receiver, action)
    c.apply()
