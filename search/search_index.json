{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u76ee\u5f55","text":"<ul> <li>\u9884\u5907\u77e5\u8bc6</li> <li>\u5f00\u53d1\u73af\u5883\u642d\u5efa</li> <li>HelloWorld</li> <li>\u5185\u8054Action\u5728\u667a\u80fd\u5408\u7ea6\u7684\u4f7f\u7528</li> <li>require_recipient\u51fd\u6570</li> <li>\u6570\u636e\u5e93\u7684\u64cd\u4f5c</li> <li>\u5bc6\u7801\u5b66\u76f8\u5173\u51fd\u6570</li> <li>\u5e38\u7528\u667a\u80fd\u5408\u7ea6\u51fd\u6570</li> <li>\u548c\u6807\u51c6Python\u7684\u5dee\u5f02</li> </ul>"},{"location":"action/","title":"\u5185\u8054Action\u5728\u667a\u80fd\u5408\u7ea6\u7684\u4f7f\u7528","text":"<p>\u5728\u667a\u80fd\u5408\u7ea6\u4e2d\u4e5f\u53ef\u4ee5\u53d1\u8d77\u4e00\u4e2aaction\uff0c\u8fd9\u6837\u7684action\u79f0\u4e4b\u4e3a\u5185\u8054action(inline action)\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0caction\u662f\u5f02\u6b65\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u5728\u6574\u4e2a\u4ee3\u7801\u6267\u884c\u5b8c\u540e\uff0c\u5185\u8054action\u5bf9\u5e94\u7684\u5408\u7ea6\u4ee3\u7801\u624d\u4f1a\u88ab\u8c03\u7528\uff0c\u5982\u679c\u88ab\u8c03\u7528\u7684\u5408\u7ea6\u6ca1\u6709\u5b9a\u4e49\u76f8\u5173\u7684action\u6216\u8005\u8d26\u53f7\u4e2d\u6ca1\u6709\u90e8\u5c5e\u5408\u7ea6\uff0c\u90a3\u4e48\u8c03\u7528\u5c06\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u4e5f\u4e0d\u4f1a\u6709\u5f02\u5e38\u629b\u51fa\u3002\u50cf\u8fd9\u4e9b\u7a7a\u7684\u5185\u8054action\u4e5f\u4e0d\u662f\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u4f8b\u5982\u53ef\u4ee5\u5f53\u4f5c\u94fe\u4e0a\u7684\u65e5\u5fd7\uff0c\u4ee5\u4f9b\u5e94\u7528\u7a0b\u5e8f\u6765\u67e5\u8be2\u3002</p> <p>\u4ee5\u4e0b\u662fAction\u7c7b\u5728<code>action.codon</code>\u4e2d\u7684\u5b8c\u6574\u4ee3\u7801\uff1a</p> <pre><code>@packer\nclass Action(object):\n    account: Name\n    name: Name\n    authorization: List[PermissionLevel]\n    data: bytes\n\n    def __init__(self, account: Name, name: Name, data: bytes=bytes()):\n        self.account = account\n        self.name = name\n        self.authorization = [PermissionLevel(account, n'active')]\n        self.data = data\n\n    def __init__(self, account: Name, name: Name, permission_account: Name, data: bytes=bytes()):\n        self.account = account\n        self.name = name\n        self.authorization = [PermissionLevel(permission_account, n'active')]\n        self.data = data\n\n    def __init__(self, account: Name, name: Name, permission_account: Name, permission_name: Name, data: bytes=bytes()):\n        self.account = account\n        self.name = name\n        self.authorization = [PermissionLevel(permission_account, permission_name)]\n        self.data = data\n\n    def __init__(self, account: Name, name: Name, authorization: List[PermissionLevel], data: bytes=bytes()):\n        self.account = account\n        self.name = name\n        self.authorization = authorization\n        self.data = data\n\n    def send(self):\n        raw = pack(self)\n        send_inline(raw.ptr, u32(raw.len))\n\n    def send(self, data: T, T: type):\n        self.data = pack(data)\n        raw = pack(self)\n        send_inline(raw.ptr, u32(raw.len))\n</code></pre> <p>\u8be5\u7c7b\u6709\u4e09\u4e2a<code>__init__</code>\u51fd\u6570\uff0c\u8bf7\u6839\u636e\u9700\u6c42\u6765\u4f7f\u7528\uff0c\u4f7f\u7528\u6bd4\u8f83\u591a\u7684\u5e94\u8be5\u662f\u4e0b\u9762\u8fd9\u4e2a\u521d\u59cb\u5316\u51fd\u6570\uff1a</p> <pre><code>def __init__(self, account: Name, name: Name, data: bytes=bytes())\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u9ed8\u8ba4\u4f7f\u7528\u548caccount\u7684<code>active</code>\u6743\u9650</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u6307\u5b9a\u4e86\u6743\u9650\u7684\u8d26\u53f7\uff0c\u4e5f\u662f\u9ed8\u8ba4\u4f7f\u7528\u8d26\u53f7\u7684<code>active</code>\u6743\u9650</p> <pre><code>def __init__(self, account: Name, name: Name, permission_account: Name, data: bytes=bytes())\n</code></pre> <p>\u5982\u679c\u4f7f\u7528\u7684\u662f\u5176\u5b83\u6743\u9650\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4e2a\u521d\u59cb\u5316\u51fd\u6570\uff1a</p> <pre><code>def __init__(self, account: Name, name: Name, permission_account: Name, permission_name: Name, data: bytes=bytes()):\n</code></pre> <p>\u5982\u679c\u8d26\u53f7\u7528\u4e86\u591a\u4e2a\u6743\u9650\uff0c\u5219\u7528\u4e0b\u4e2a\u8fd9\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u3002</p> <pre><code>def __init__(self, account: Name, name: Name, authorization: List[PermissionLevel], data: bytes=bytes()):\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <pre><code># action_example.codon\nfrom packer import pack\nfrom chain.action import Action, PermissionLevel\nfrom chain.contract import Contract\n\n@packer\nclass Person:\n    name: str\n    height: u64\n    def __init__(self, name: str, height: u64):\n        self.name = name\n        self.height = height\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        a = Action(n'hello', n'test2')\n        print('++++send test2 action')\n        a.send(\"1 alice\")\n\n        a = Action(n'hello', n'test2', n'hello')\n        print('++++send test2 action')\n        a.send(\"2 alice\")\n\n        a = Action(n'hello', n'test2', n'hello', n'active')\n        print('++++send test2 action')\n        a.send(\"3 alice\")\n\n        a = Action(n'hello', n'test2', [PermissionLevel(n\"hello\", n\"active\")])\n        print('++++send test2 action')\n        a.send(\"4 alice\")\n\n        a = Action(n'hello', n'test3')\n        print('++++send test3 action')\n        a.send(Person(\"alice\", 175u64))\n        return\n\n    @action('test2')\n    def test2(self, name: str):\n        print('++++=name:', name)\n\n    @action('test3')\n    def test3(self, name: str, height: u64):\n        print('++++=name:', name, 'height:', height)\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def test_action():\n    t = init_test('action_example')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\", ret['elapsed'])\n</code></pre> <p>\u7f16\u8bd1\uff1a <pre><code>python-contract build action_example.codon\n</code></pre></p> <p>\u8fd0\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_action\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>debug 2023-03-28T12:35:48.175 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,test)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\n++++send test2 action\n++++send test2 action\n++++send test2 action\n++++send test2 action\n++++send test3 action\n\n[(hello,test)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T12:35:48.175 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\n++++=name: 1 alice\n\n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T12:35:48.175 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\n++++=name: 2 alice\n\n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T12:35:48.175 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\n++++=name: 3 alice\n\n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T12:35:48.175 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\n++++=name: 4 alice\n\n[(hello,test2)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T12:35:48.175 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,test3)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\n++++=name: alice height: 175\n\n[(hello,test3)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T12:35:48.177 thread-0  controller.cpp:2444           clear_expired_input_ ] removed 0 expired transactions of the 50 input dedup list, pending block time 2018-06-01T12:00:04.000\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u5148\u8c03\u7528\u4e86<code>test</code>\u8fd9\u4e2a\u5728Transaction\u91cc\u6307\u5b9a\u4e86\u7684action\uff0c\u7136\u540e\u8c03\u7528\u4e86<code>test2</code>\u8fd9\u4e2aAction\uff0c\u4f46\u662f<code>test2</code>\u8fd9\u4e2aaction\u5e76\u6ca1\u6709\u5728Transaction\u91cc\u6307\u5b9a\uff0c\u800c\u662f\u5728\u667a\u80fd\u5408\u7ea6\u91cc\u53d1\u8d77\u7684\u3002\u53e6\u5916\uff0c\u8fd8\u901a\u8fc7<code>test3</code>\u6f14\u793a\u4e86\u5982\u4f55\u53d1\u9001\u5e26\u591a\u4e2a\u53c2\u6570\u7684action.</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u5728\u5408\u7ea6\u4e2d\u80fd\u591f\u8c03\u7528inline action\uff0c\u9700\u8981\u5728\u8d26\u53f7\u7684<code>active</code>\u6743\u9650\u4e2d\u6dfb\u52a0<code>eosio.code</code>\u8fd9\u4e2a\u865a\u62df\u6743\u9650,\u5728\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u4e0b\u9762\u7684\u51fd\u6570\u6765\u5c06<code>eosio.code</code>\u8fd9\u4e2a\u865a\u62df\u6743\u9650\u6dfb\u52a0\u5230<code>active</code>\u6743\u9650\u4e2d\u3002</p> <pre><code>def update_auth(chain, account):\n    a = {\n        \"account\": account,\n        \"permission\": \"active\",\n        \"parent\": \"owner\",\n        \"auth\": {\n            \"threshold\": 1,\n            \"keys\": [\n                {\n                    \"key\": 'EOS6AjF6hvF7GSuSd4sCgfPKq5uWaXvGM2aQtEUCwmEHygQaqxBSV',\n                    \"weight\": 1\n                }\n            ],\n            \"accounts\": [{\"permission\":{\"actor\":account,\"permission\": 'eosio.code'}, \"weight\":1}],\n            \"waits\": []\n        }\n    }\n    chain.push_action('eosio', 'updateauth', a, {account:'active'})\n</code></pre>"},{"location":"c/","title":"Codon\u4ee3\u7801\u4e0eC\u4ee3\u7801\u7684\u76f8\u4e92\u8c03\u7528","text":""},{"location":"c/#codonc_1","title":"\u5728Codon\u4ee3\u7801\u91cc\u8c03\u7528C\u4ee3\u7801","text":"<pre><code>from C import say_hello(cobj, int) -&gt; None\n</code></pre>"},{"location":"c/#ccodon","title":"\u5728C\u4ee3\u7801\u91cc\u8c03\u7528Codon\u4ee3\u7801","text":"<pre><code>@export\ndef print_string(a: cobj\uff0c len: int) -&gt; int:\n    return int(strlen(a))\n</code></pre>"},{"location":"codon/","title":"\u548c\u6807\u51c6Python\u7684\u5dee\u5f02","text":""},{"location":"codon/#pythonpython","title":"Python\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u548c\u6807\u51c6Python\u4ee3\u7801\u7684\u5dee\u5f02","text":"<p>\u4e00\u822cPython\u90fd\u88ab\u79f0\u4f5c\u4e00\u79cd\u52a8\u6001\u8bed\u8a00\uff0c\u7279\u70b9\u662f\u7f16\u8bd1\u65f6\u751f\u6210\u7684\u662f\u6bd4\u8f83\u9ad8\u7ea7\u7684\u865a\u62df\u673a\u6307\u4ee4(byte code)\uff0c\u6267\u884cPython\u7a0b\u5e8f\u7684\u65f6\u5019\u662f\u8fd8\u9700\u901a\u8fc7\u4e13\u95e8\u7684\u865a\u62df\u673a\u7a0b\u5e8f\u89e3\u91ca\u6267\u884c\u7684\u3002\u597d\u5904\u662f\u4ee3\u7801\u975e\u5e38\u7075\u6d3b\uff0c\u652f\u6301\u5bf9\u4ee3\u7801\u7684\u52a8\u6001\u4fee\u6539\uff0c\u7f3a\u70b9\u662f\u6267\u884c\u901f\u5ea6\u6162\u3002\u6700\u65e9\u7684Python\u667a\u80fd\u5408\u7ea6\u5373\u662f\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6267\u884c\u7684\u3002\u540e\u6765\u4e3a\u4e86\u89e3\u51b3Python\u4ee3\u7801\u6267\u884c\u901f\u5ea6\u6162\u7684\u95ee\u9898\uff0c\u51fa\u73b0\u4e86\u8bb8\u591a\u89e3\u51b3\u65b9\u6848\uff0c\u5176\u4e2d\u5c31\u6709\u50cfCodon\u8fd9\u91cc\u7684\u5c06Python\u4ee3\u7801\u76f4\u63a5\u7f16\u8bd1\u6210\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u7684\u673a\u5668\u7801(binary code)\u8fd9\u6837\u7684\u5de5\u5177\u3002Python\u667a\u80fd\u5408\u7ea6\u540e\u9762\u4e5f\u91c7\u7528\u4e86Codon\u7f16\u8bd1\u5668\uff0c\u4ece\u800c\u5728\u4fdd\u7559\u5199Python\u7684\u4ee3\u7801\u7684\u6613\u7528\u6027\u7684\u540c\u65f6\uff0c\u53c8\u80fd\u4fdd\u8bc1\u6267\u884c\u901f\u5ea6\u3002\u4f46\u662f\u7531\u4e8e\u7f16\u8bd1\u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u4e0d\u76f8\u540c\uff0c\u88ab\u6267\u884c\u7684\u65b9\u5f0f\u548c\u6807\u51c6\u7684Python\u7a0b\u5e8f\u4e0d\u540c\uff0c\u6240\u4ee5\u7528Codon\u7f16\u8bd1\u7684Python\u4ee3\u7801\u5728\u5728\u517c\u5bb9\u6027\u4e0a\u548c\u6807\u51c6\u7684Python\u4ee3\u7801\u6709\u4e00\u4e9b\u5dee\u5f02\u3002\u4e0b\u9762\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e9b\u5dee\u5f02\uff0c\u907f\u514d\u5728\u5199\u667a\u80fd\u5408\u7ea6\u7684\u65f6\u5019\u4ea7\u751f\u7591\u60d1\u3002</p>"},{"location":"codon/#_1","title":"\u7c7b\u7684\u65b9\u6cd5\u652f\u6301\u91cd\u8f7d","text":"<p>\u4f8b\u5982\uff1a</p> <pre><code>class SecondaryValue(object):\n    def __init__(self, value: u64):\n        pass\n\n    def __init__(self, value: u128):\n        pass\n</code></pre> <p>\u4f46\u662f\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6a21\u5757\u7684\u51fd\u6570\u6682\u65f6\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d</p>"},{"location":"codon/#codonint64","title":"Codon\u91cc\u7684int\u7c7b\u578b\u662f64\u4f4d\u6709\u7b26\u53f7\u6574\u6570","text":"<p>\u8fd9\u548cPython\u91cc\u7684\u65e0\u9650\u6574\u6570\u4e0d\u540c\uff0c\u4e00\u4e2a\u539f\u56e0\u662fCodon\u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u4ee3\u7801\u4f1a\u76f4\u63a5\u7f16\u8bd1\u6210\u673a\u5668\u7801(binary code)\uff0c\u800c\u4e0d\u662f\u865a\u62df\u673a\u6307\u4ee4(byte code)\u3002\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u662f\u51fa\u4e8e\u6548\u7387\u7684\u8003\u8651\u3002</p>"},{"location":"codon/#codon","title":"Codon\u7684\u6570\u503c\u7c7b\u578b","text":"<p>\u9664\u4e86int\u7c7b\u578b\u5916\uff0cCodon\u4e2d\u8fd8\u6709\u8fd9\u51e0\u79cd\u6570\u503c\u7c7b\u578b\uff1a<code>u64</code>, <code>u128</code>, <code>u256</code>,\u5206\u522b\u7528\u6765\u8868\u793a64\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570\uff0c128\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570\uff0c256\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570</p>"},{"location":"codon/#_2","title":"\u5b57\u7b26\u4e32\u7c7b\u578b","text":"<p>Codon \u76ee\u524d\u4f7f\u7528\u7684\u662f ASCII \u5b57\u7b26\u4e32\uff0c\u4e0d\u50cf Python \u7684 unicode \u5b57\u7b26\u4e32\u3002</p>"},{"location":"codon/#_3","title":"\u5b57\u5178\u7c7b\u578b","text":"<p>Codon \u7684\u5b57\u5178\u7c7b\u578b\u4e0d\u4fdd\u7559\u63d2\u5165\u987a\u5e8f\uff0c\u4e0d\u50cfPython\u90a3\u6837\u4ece3.6\u5f00\u59cb\u652f\u6301\u3002</p>"},{"location":"codon/#_4","title":"\u603b\u7ed3","text":"<p>\u6700\u540e\uff0c\u7279\u522b\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u7684\u662f\uff0c\u7f16\u8bd1\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u540e\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6307\u4ee4\u662fWebAssembly\u6307\u4ee4\uff0c\u6587\u4ef6\u7684\u6269\u5c55\u540d\u4e3a.wasm\u3002\u5728\u73b0\u5b9e\u4e2d\uff0c\u5e76\u6ca1\u6709\u80fd\u76f4\u63a5\u6267\u884cWebAssembly\u6307\u4ee4\u7684CPU\u5b58\u5728\uff0c\u5728\u6267\u884c\u7684\u65f6\u5019\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e5f\u662f\u9700\u8981\u901a\u8fc7\u4e13\u95e8\u7684\u865a\u62df\u673a\u7a0b\u5e8f\u6765\u89e3\u91ca\u6267\u884c\u7684\uff0c\u4f46\u662f\u6267\u884c\u7684\u662fbinary code\u800c\u5df2\u3002\u8fd9\u548cPython\u7684\u865a\u62df\u673a\u6267\u884cbyte code\u7684\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u4f46\u662fWebAssebmly\u7684\u6307\u4ee4\u7531\u4e8e\u662fbinary code\uff0c\u6bd4Python\u7684\u865a\u62df\u673a\u6307\u4ee4\u66f4\u52a0\u4f4e\u7ea7\uff0c\u5b89\u5168\u6027\u4e5f\u66f4\u597d\uff0c\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u7684\u7ffb\u8bd1\u6210\u7cfb\u7edf\u7684\u673a\u5668\u7801\uff0c\u6240\u4ee5\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u7684\u4ee5JIT\u6216\u8005AOT\u7684\u65b9\u5f0f\u5148\u7f16\u8bd1\u6210\u6240\u5728\u7684\u7cfb\u7edf\u6307\u4ee4\u540e\u518d\u6267\u884c\uff0c\u4ece\u800c\u4f18\u5316\u6267\u884c\u7684\u901f\u5ea6\u3002\u5728EOS\u533a\u5757\u94fe\u4e2d\uff0c\u667a\u80fd\u5408\u7ea6\u7684\u4ee3\u7801\u65e2\u53ef\u4ee5\u901a\u8fc7<code>eosvm</code>\u4ee5JIT\u7684\u65b9\u5f0f\u6765\u6267\u884c\u7684\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6307\u4ee4\u89e3\u91ca\u6267\u884c\u7684\u65b9\u5f0f\u6765\u6267\u884c\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u5148\u7f16\u8bd1\u6210\u7cfb\u7edf\u53ef\u76f4\u63a5\u6267\u884c\u7684\u673a\u5668\u7801\u6765\u8fd0\u884c\u3002\u800cPython\u7684\u865a\u62df\u673a\u6307\u4ee4\u5219\u5f88\u96be\u88ab\u5b8c\u5168\u7684\u4ee5JIT\u548cAOT\u7684\u65b9\u5f0f\u6765\u6267\u884c\u3002</p> <p>\u4e00\u53e5\u8bdd\u6765\u4f5c\u4e0b\u603b\u7ed3\uff1aPython\u667a\u80fd\u5408\u7ea6\u91c7\u7528Codon\u8fd9\u79cd\u9759\u6001\u7f16\u8bd1\u5668\uff0c\u727a\u7272\u4e86\u4e00\u90e8\u5206\u7684\u548c\u6807\u51c6Python\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u4e3a\u4ee3\u4ef7\uff0c\u4ee5\u83b7\u5f97\u8fd0\u884c\u901f\u5ea6\u548c\u5b89\u5168\u6027\u4e0a\u7684\u5927\u5e45\u7684\u63d0\u5347\u3002</p>"},{"location":"common/","title":"\u5e38\u7528\u667a\u80fd\u5408\u7ea6\u51fd\u6570","text":""},{"location":"common/#is_account","title":"is_account","text":"<p>\u58f0\u660e\uff1a</p> <pre><code>def is_account(account: Name ) -&gt; bool:\n    ...\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u7528\u6765\u5224\u65ad\u8d26\u53f7\u5b58\u4e0d\u5b58\u5728</p>"},{"location":"common/#has_auth","title":"has_auth","text":"<p>\u58f0\u660e\uff1a</p> <pre><code>def has_auth(account: Name) -&gt; bool:\n    ...\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u7528\u6765\u5224\u65ad\u662f\u5426\u6709\u6307\u5b9a\u8d26\u53f7\u7684<code>active</code>\u6743\u9650</p>"},{"location":"common/#require_authrequire_auth2","title":"require_auth/require_auth2","text":"<p>\u58f0\u660e\uff1a</p> <pre><code>def require_auth(account: Name):\n    ...\n\ndef require_auth2(account: Name, permission: Name):\n    ...\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u5728\u8d26\u53f7\u4e0d\u5b58\u5728\u6216\u8005\u6ca1\u6709\u68c0\u6d4b\u5230\u6709\u6307\u5b9a\u8d26\u53f7\u7684\u6743\u9650\u65f6\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e0d\u540c\u7684\u662f<code>require_auth</code>\u4e3a\u68c0\u6d4b\u662f\u5426\u5b58\u5728<code>active</code>\u6743\u9650\uff0c\u800c<code>require_auth2</code>\u53ef\u4ee5\u68c0\u6d4b\u6307\u5b9a\u7684\u6743\u9650\u3002</p>"},{"location":"common/#publication_timecurrent_time","title":"publication_time/current_time","text":""},{"location":"common/#check","title":"check","text":"<p>\u58f0\u660e\uff1a</p> <pre><code>def check(test: bool, msg: str) -&gt; None:\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <p>\u5982\u679ctest\u4e3aFalse\uff0c\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u8be5\u51fd\u6570\u5728\u667a\u80fd\u5408\u7ea6\u4e2d\u4f7f\u7528\u6bd4\u8f83\u9891\u7e41\uff0c\u53ef\u53c2\u8003<code>token.codon</code>\u4e2d\u7684\u4ee3\u7801</p>"},{"location":"common/#_2","title":"\u793a\u4f8b\u4ee3\u7801\uff1a","text":"<pre><code>from chain.action import has_auth, require_auth, require_auth2, is_account\nfrom chain.contract import Contract\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        has_auth(n\"hello\")\n\n        require_auth(n\"hello\")\n        require_auth2(n\"hello\", n\"active\")\n\n        print(is_account(n\"hello\"))\n        print(is_account(n\"hello\"))\n        return\n</code></pre> <p>\u7f16\u8bd1\uff1a <pre><code>python-contract build common_example.codon\n</code></pre></p> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def test_common():\n    t = init_test('common_example')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_common\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>[(hello,test)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\nTrue\nTrue\n\n[(hello,test)-&gt;hello]: CONSOLE OUTPUT END   =====================\n</code></pre></p>"},{"location":"crypto/","title":"\u5bc6\u7801\u5b66\u76f8\u5173\u51fd\u6570","text":"<p>\u5bc6\u7801\u5b66\u76f8\u5173\u7684\u51fd\u6570\u5728<code>crypto.codon</code>\u4e2d\u5b9a\u4e49\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u5bfc\u5165\uff1a</p> <pre><code>from chain.crypto import ...\n</code></pre> <p>\u6216\u8005\u53ea\u5bfc\u5165crypto\u6a21\u5757\uff1a</p> <pre><code>from chain import crypto\n</code></pre> <p>\u7136\u540e\u901a\u8fc7\u50cf<code>crypto.sha256</code>\u7684\u65b9\u5f0f\u6765\u8c03\u7528\u5185\u90e8\u51fd\u6570\u3002</p>"},{"location":"crypto/#sha256","title":"sha256","text":"<p>sha256\u7b97\u6cd5hash\u51fd\u6570</p> <pre><code>def sha256(data: bytes) -&gt; Checksum256:\n</code></pre> <p>\u7528\u4e8e\u68c0\u6d4bhash256\u503c\u662f\u5426\u6b63\u5e38\uff0c\u4e0d\u6b63\u786e\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38</p> <pre><code>def assert_sha256(data: bytes, hash: Checksum256):\n</code></pre>"},{"location":"crypto/#sha1","title":"sha1","text":"<p>sha1\u7b97\u6cd5hash\u51fd\u6570</p> <pre><code>def sha1(data: bytes) -&gt; Checksum160:\n</code></pre> <p>\u7528\u4e8e\u68c0\u6d4bsha1 hash\u503c\u662f\u5426\u6b63\u5e38\uff0c\u4e0d\u6b63\u786e\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38</p> <pre><code>def assert_sha1(data: bytes, hash: Checksum160):\n</code></pre>"},{"location":"crypto/#sha512","title":"sha512","text":"<p>sha512\u7b97\u6cd5hash\u51fd\u6570</p> <pre><code>def sha512(data: bytes) -&gt; Checksum512:\n</code></pre> <p>\u7528\u4e8e\u68c0\u6d4bhash512\u503c\u662f\u5426\u6b63\u5e38\uff0c\u4e0d\u6b63\u786e\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38</p> <pre><code>def assert_sha512(data: bytes, hash: Checksum512):\n</code></pre>"},{"location":"crypto/#ripemd160","title":"ripemd160","text":"<p>ripemd160\u7b97\u6cd5hash\u51fd\u6570</p> <pre><code>def ripemd160(data: bytes) -&gt; Checksum160:\n</code></pre> <p>\u7528\u4e8e\u68c0\u6d4bripemd160\u7b97\u6cd5\u7684hash\u503c\u662f\u5426\u6b63\u5e38\uff0c\u4e0d\u6b63\u786e\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38</p> <pre><code>def assert_ripemd160(data: bytes, hash: Checksum160):\n</code></pre>"},{"location":"crypto/#recover_key","title":"recover_key","text":"<p>\u7528\u4e8e\u4ecedigest\u548csignture\u4e2d\u6062\u590d\u51fa\u516c\u94a5</p> <pre><code>def recover_key(digest: Checksum256, sig: Signature) -&gt; PublicKey:\n</code></pre> <p>\u68c0\u67e5\u7b7e\u540d\u662f\u5426\u6b63\u5e38\uff0c\u4e0d\u6b63\u5e38\u4f1a\u629b\u51fa\u5f02\u5e38</p> <pre><code>def assert_recover_key(digest: Checksum256, sig: Signature, pub: PublicKey):\n</code></pre>"},{"location":"crypto/#_2","title":"\u793a\u4f8b\uff1a","text":"<pre><code># crypto_example.codon\nfrom chain.contract import Contract\nfrom chain.crypto import sha256, assert_sha256, sha512, assert_sha512, sha1, assert_sha1, ripemd160, assert_ripemd160\nfrom chain.crypto import recover_key, assert_recover_key\nfrom chain.crypto import Signature, Checksum256, PublicKey\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('testcrypto')\n    def test_crypto(self):\n        assert_sha256(b\"hello\", sha256(b\"hello\"))\n        assert_sha1(b\"hello\", sha1(b\"hello\"))\n        assert_sha512(b\"hello\", sha512(b\"hello\"))\n        assert_ripemd160(b\"hello\", ripemd160(b\"hello\"))\n\n    @action('testrecover')\n    def test_recover(self, msg: bytes, digest: Checksum256, sig: Signature, k1: PublicKey):\n        _digest = sha256(msg)\n        assert _digest == digest\n        _pubkey = recover_key(digest, sig)\n        assert _pubkey == k1, \"_pubkey == k1\"\n        assert_recover_key(digest, sig, k1)\n        print('done!')\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def test_crypto():\n    t = init_test('crypto_example')\n    args = {}\n    ret = t.push_action('hello', 'testcrypto', args, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n\ndef test_recover():\n    t = init_test('crypto_example')\n\n    msg = b'hello,world'\n    # key pair\n    public_key = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\n    private_key = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n    h = hashlib.sha256()\n    h.update(msg)\n    digest = h.hexdigest()\n    logger.info('++++digest: %s', digest)\n\n    #sign with private key\n    sig = eosapi.sign_digest(digest, private_key)\n    logger.info('++++signature: %s', sig)\n    args = {\n        \"msg\": msg.hex(),\n        \"digest\": digest,\n        \"sig\": sig,\n        \"k1\": public_key,\n    }\n    ret = t.push_action('hello', 'testrecover', args, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build crypto_example.codon\n</code></pre> <p>\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_crypto\nipyeos -m pytest -s -x test.py -k test_recover\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0c\u5206\u522b\u6f14\u793a\u4e86\u5e38\u7528\u7684hash\u51fd\u6570\u7684\u7528\u6cd5\u4ee5\u53ca<code>recover_key</code>\u548c<code>assert_recover_key</code>\u7684\u7528\u6cd5\u3002hash\u51fd\u6570\u7684\u7528\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0brecover_key\u7684\u6d4b\u8bd5\u4ee3\u7801\uff1a recover_key\u63a5\u53d7\u4e8c\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u662f<code>digest</code>\u548c<code>signature</code>\uff0cdigest\u662f\u5bf9\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884csha256\u8fd0\u884c\u7684\u7ed3\u679c\u3002\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u662f\u901a\u8fc7\u5bf9<code>hello,world</code>\u8fdb\u884csha256\u7b97\u6cd5\u7684hash\u8ba1\u7b97\u3002</p> <pre><code>h = hashlib.sha256()\nh.update(b'hello,world')\ndigest = h.hexdigest()\n</code></pre> <p>\u8fd0\u7b97\u51fa\u7684\u7ed3\u679c\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9action.</p> <p>\u4e0b\u9762\u662f\u5bf9<code>testrecover</code>\u7684\u89e3\u91ca\uff1a</p> <pre><code>@action('testrecover')\ndef test_recover(self, msg: bytes, digest: Checksum256, sig: Signature, k1: PublicKey):\n    _digest = sha256(msg)\n    assert _digest == digest #\u5224\u65addigest\u662f\u5426\u5bf9msg\u8fdb\u884chash256\u7b97\u6cd5\u7684hash\u7ed3\u679c\n    _pubkey = recover_key(digest, sig)\n    assert _pubkey == k1, \"_pubkey == k1\" #\u5224\u65adpublic key\u662f\u5426\u6b63\u786e\n\n    assert_recover_key(digest, sig, k1) #\u4f5c\u7528\u76f8\u5f53\u4e8e\u4e0a\u9762\u4e24\u884c\u4ee3\u7801\n    print('done!')\n</code></pre> <p>\u5728\u53d1\u9001\u7684Transaction\u4e2d\u4e5f\u662f\u9700\u8981\u5305\u542b\u7528\u6237\u5bf9Transaction\u7684\u7b7e\u540d\u7684\uff0c\u4ee5\u8868\u793a\u7528\u6237\u6388\u6743\u4e86\u8fd9\u4e2aTransaction\u3002\u7136\u540e\u5728\u667a\u80fd\u5408\u7ea6\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u7684<code>require_auth</code>\u51fd\u6570\u6765\u5224\u65adTransaction\u662f\u5426\u8fdb\u884c\u8fc7\u7279\u5b9a\u7528\u6237\u7684\u6388\u6743\u3002</p> <p>\u5728\u5b9e\u9645\u7684\u667a\u80fd\u5408\u7ea6\u7684\u5e94\u7528\u4e2d\uff0c\u5982\u679c\u8981\u5728\u667a\u80fd\u5408\u7ea6\u91cc\u5224\u65ad\u67d0\u6bb5\u4e8c\u8fdb\u5236\u6570\u636e\u662f\u5426\u662f\u7528\u7279\u5b9a\u7684\u79c1\u94a5\u8fdb\u884c\u7684\u7b7e\u540d\u4e5f\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u529e\u6cd5\u3002\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u9996\u5148\u7528\u6237\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6570\u636e\u8fdb\u884c\u7b7e\u540d</li> <li>\u7528\u6237\u5c06\u6570\u636e\uff0c\u7b7e\u540d\uff0c\u516c\u94a5\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u79c1\u94a5\uff09\u4f20\u7ed9\u667a\u80fd\u5408\u7ea6</li> <li>\u667a\u80fd\u5408\u7ea6\u5373\u53ef\u5224\u65ad\u6570\u636e\u662f\u5426\u662f\u7528\u7279\u522b\u7684\u79c1\u94a5\u7b7e\u7684\u540d\uff0c\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</li> </ul>"},{"location":"database/","title":"\u6570\u636e\u5e93\u7684\u64cd\u4f5c","text":"<p>\u94fe\u4e0a\u6570\u636e\u5b58\u50a8\u548c\u8bfb\u53d6\u662f\u667a\u80fd\u5408\u7ea6\u7684\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u3002EOS\u94fe\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5185\u5b58\u6570\u636e\u5e93\uff0c\u652f\u6301\u4ee5\u8868\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u6570\u636e\uff0c\u5176\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8868\u7684\u6bcf\u4e00\u9879\u6570\u636e\u90fd\u6709\u552f\u4e00\u7684\u4e3b\u7d22\u5f15\uff0c\u79f0\u4e4b\u4e3aprimary key\uff0c\u7c7b\u578b\u4e3au64\uff0c\u8868\u4e2d\u5b58\u50a8\u7684\u539f\u59cb\u6570\u636e\u4e3a\u4efb\u610f\u957f\u5ea6\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5728\u5b58\u50a8\u65f6\uff0c\u4f1a\u5c06\u7c7b\u7684\u6570\u636e\u5e8f\u5217\u5316\u540e\u5b58\u8fdb\u8868\u4e2d\uff0c\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u53c8\u4f1a\u901a\u8fc7\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u5c06\u539f\u59cb\u6570\u636e\u8f6c\u6210\u7c7b\u5bf9\u8c61\u3002\u5e76\u4e14\u8fd8\u652f\u6301u64, u128, u256, double, long double\u7c7b\u578b\u7684\u7d22\u5f15\u8868\uff0c\u53ef\u4ee5\u628a\u7d22\u5f15\u8868\u770b\u4f5c\u6570\u636e\u957f\u5ea6\u56fa\u5b9a\u7684\u7279\u6b8a\u7684\u8868\u3002\u666e\u901a\u8868\u548c\u7d22\u5f15\u8868\u53ef\u4ee5\u914d\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u4e8c\u7ea7\u7d22\u5f15\u7684\u529f\u80fd\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e8c\u7ea7\u7d22\u5f15\u7684\u503c\u662f\u53ef\u4ee5\u91cd\u590d\u7684\uff0c\u4f46\u662f\u4e3b\u7d22\u5f15\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002</p> <p>\u5728Python\u667a\u80fd\u5408\u7ea6\u4e2d\uff0c\u662f\u901a\u8fc7<code>PrimaryTable</code>\u7c7b\u6765\u64cd\u4f5c\u8868\u7684\u3002\u4ee5\u4e0b\u662f\u8fd9\u4e2a\u7c7b\u7684\u58f0\u660e\uff1a</p> <pre><code>class PrimaryTable:\n    def store(self, item: T, payer: Name) -&gt; Iterator[T]:\n        ...\n\n    def update(self, it: Iterator[T], item: T, payer: Name):\n        ...\n\n    def remove(self, it: Iterator[T]):\n        ...\n\n    def find(self, id: u64) -&gt; Iterator[T]:\n        ...\n\n    def get(self, id: u64) -&gt; Optional[T]:\n        ...\n\n    def set(self, item: T, payer: Name):\n        ...\n\n    def get_by_iterator(self, it: Iterator[T]) -&gt; Optional[T]:\n        ...\n\n    def next(self, it: Iterator[T]) -&gt; Iterator[T]:\n        ...\n\n    def previous(self, it: Iterator[T]) -&gt; Iterator[T]:\n        ...\n\n    def lowerbound(self, id: u64):\n        ...\n\n    def upperbound(self, id: u64):\n        ...\n\n    def end(self) -&gt; Iterator[T]:\n        ...\n</code></pre>"},{"location":"database/#storeupdatefindgetset","title":"store/update/find/get/set\u4e94\u4e2a\u65b9\u6cd5\u7684\u7528\u6cd5","text":""},{"location":"database/#store","title":"store","text":"<p>\u4ee5\u4e0b\u662f<code>PrimaryTable</code>\u7c7b<code>store</code>\u65b9\u6cd5\u7684\u7528\u6cd5\u4f8b\u5b50\uff1a</p> <pre><code># db_example1.codon\nfrom chain.database import PrimaryTable\nfrom chain.contract import Contract\n\n@packer\nclass A(object):\n    a: u64\n    b: str\n    def __init__(self, a: u64, b: str):\n        self.a = a\n        self.b = b\n\n    def get_primary(self) -&gt; u64:\n        return self.a\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        item = A(123u64, 'hello, world')\n        table = PrimaryTable[A](n'hello', n'', n'mytable')\n        table.store(item, n'hello')\n</code></pre> <p>\u8fd9\u91cc\u5c55\u793a\u4e86<code>PrimaryTable</code>\u7c7b\u7684<code>store</code>\u65b9\u6cd5\u7684\u7528\u6cd5</p> <p>packer\u662f\u4e00\u4e2a\u5185\u7f6e\u7684decorator\uff0c\u7528\u6765\u5c06\u7c7b\u4e2d\u7684\u6570\u636e\u5e8f\u5217\u5316\uff0c\u540e\u9762\u8fd8\u4f1a\u5355\u72ec\u8bb2\u5230\u3002\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fdb\u884c\u6d4b\u8bd5\uff1a</p> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example1.codon\n</code></pre> <p><pre><code>ipyeos -m pytest -s -x test.py -k test_example1\n</code></pre> \u8fd0\u884c\u7684\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def test_example1():\n    t = init_db_test('db_example1')\n    ret = t.push_action('hello', 'test', \"\", {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u6ce8\u610f\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5982\u679c\u8868\u4e2d\u5df2\u7ecf\u5b58\u5728\u4ee5<code>123u64</code>\u4e3akey\u7684\u6570\u636e\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u4f1a\u629b\u51fa\u5f02\u5e38\u3002</p> <p>\u5982\u5c06\u4e0a\u9762\u7684\u6d4b\u8bd5\u7528\u4f8b\u4fee\u6539\u6210\u4e0b\u9762\u7684\u4ee3\u7801\uff1a</p> <pre><code>def test_example1():\n    t = init_db_test('db_example1')\n    ret = t.push_action('hello', 'test', \"\", {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n\n    # will raise exception\n    ret = t.push_action('hello', 'test', \"\", {'hello': 'active'})\n    t.produce_block()\n</code></pre> <p>\u7528\u540c\u6837\u7684\u547d\u4ee4\u8fd0\u884c\u6d4b\u8bd5\uff0c\u5728\u7b2c\u4e8c\u6b21\u8c03\u7528<code>push_action</code>\u65f6\uff0c\u8be5\u51fd\u6570\u5c31\u4f1a\u629b\u51fa\u50cf\u4e0b\u9762\u7684\u5f02\u5e38\uff1a</p> <pre><code>could not insert object, most likely a uniqueness constraint was violated\n</code></pre> <p>\u4e3a\u4e86\u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u5728\u8981\u66f4\u65b0\u8868\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u5219\u8981\u7528\u5230<code>update</code>\u65b9\u6cd5\u3002 \u5728\u8c03\u7528<code>store</code>\u4e4b\u524d\u8981\u5148\u5bf9\u8868\u4e2d\u662f\u5426\u5b58\u5728\u4e3b\u7d22\u5f15\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4e0d\u80fd\u8c03\u7528<code>store</code>\u65b9\u6cd5\uff0c\u800c\u5fc5\u987b\u8c03\u7528<code>update</code>\u65b9\u6cd5\u3002 \u4ee5\u4e0b\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u7528\u6cd5\uff1a</p>"},{"location":"database/#findupdate","title":"find/update","text":"<pre><code># db_example2.codon\nfrom chain.database import PrimaryTable\nfrom chain.contract import Contract\n\n@packer\nclass A(object):\n    a: u64\n    b: str\n    def __init__(self, a: u64, b: str):\n        self.a = a\n        self.b = b\n\n    def get_primary(self) -&gt; u64:\n        return self.a\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self, value: str):\n        print('db_test')\n        table = PrimaryTable[A](n'hello', n'', n'mytable')\n        key = 123u64\n        it = table.find(key)\n        if it.is_ok():\n            print('+++++update value:', value)\n            item = A(key, value)\n            table.update(it, item, n'hello')\n        else:\n            print('+++++store value:', value)\n            item = A(key, value)\n            table.store(item, n'hello')\n</code></pre> <p>\u4ee5\u4e0b\u4e3a\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def test_example2():\n    t = init_db_test('db_example2')\n    ret = t.push_action('hello', 'test', {'value': 'hello, bob'}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n\n    ret = t.push_action('hello', 'test', {'value': 'hello, alice'}, {'hello': 'active'})\n    t.produce_block()\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example2.codon\n</code></pre> <p>\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fd0\u884c\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_example2\n</code></pre> <p>\u5728\u8c03\u7528 <pre><code>t.push_action('hello', 'test', {'value': 'hello, bob'}, {'hello': 'active'})\n</code></pre></p> <p>\u4f1a\u8f93\u51fa\uff1a</p> <pre><code>+++++store value: hello, bob\n</code></pre> <p>\u5728\u8c03\u7528 <pre><code>t.push_action('hello', 'test', {'value': 'hello, alice'}, {'hello': 'active'})\n</code></pre></p> <p>\u4f1a\u8f93\u51fa\uff1a</p> <pre><code>+++++update value: hello, alice\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u5fae\u6709\u70b9\u590d\u6742\uff0c\u9996\u5148\u8981\u8c03\u7528<code>find</code>\u5224\u65ad\u548c\u4e3b\u7d22\u5f15\u5bf9\u5e94\u7684\u503c\u5b58\u4e0d\u5b58\u5728\uff0c\u518d\u51b3\u5b9a\u662f\u8c03\u7528<code>store</code>\u8fd8\u662f<code>update</code>\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u7684\u529f\u80fd\u53ef\u4ee5\u7528<code>PrimaryTable.set</code>\u65b9\u6cd5\u6765\u66ff\u4ee3\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a</p>"},{"location":"database/#getset","title":"get/set","text":"<pre><code># test_example3.codon\nfrom chain.database import PrimaryTable\nfrom chain.contract import Contract\n\n@packer\nclass A(object):\n    a: u64\n    b: str\n    def __init__(self, a: u64, b: str):\n        self.a = a\n        self.b = b\n\n    def get_primary(self) -&gt; u64:\n        return self.a\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self, value: str):\n        print('db_test')\n        table = PrimaryTable[A](n'hello', n'', n'mytable')\n        key = 123u64\n        payer = n'hello'\n        item = table.get(key)\n        if item:\n            print('+++++item.b:', item.b)\n        item = A(key, value)\n        table.set(item, payer)\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\u548c<code>test_example</code>\u7c7b\u4f3c:</p> <pre><code>def test_example3():\n    t = init_db_test('db_example3')\n    ret = t.push_action('hello', 'test', {'value': 'hello, bob'}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n\n    ret = t.push_action('hello', 'test', {'value': 'hello, alice'}, {'hello': 'active'})\n    t.produce_block()\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example3.codon\n</code></pre> <p>\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fd0\u884c\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_example3\n</code></pre> <p>\u5728\u7b2c\u4e8c\u6b21\u8c03\u7528<code>push_action</code>\u65f6\uff0c\u4f1a\u6709\u4e0b\u9762\u7684\u8f93\u51fa\uff1a <pre><code>++++item.b: hello, bob\n</code></pre></p>"},{"location":"database/#lowerboundupperbound","title":"lowerbound/upperbound","text":"<p>\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e5f\u662f\u7528\u6765\u67e5\u627e\u7ed9\u4e2d\u7684\u5143\u7d20\u7684\uff0c\u4e0d\u540c\u4e8e<code>find</code>\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u6a21\u7cca\u67e5\u627e\u3002\u5176\u4e2d\uff0c<code>lowerbound</code>\u65b9\u6cd5\u8fd4\u56de<code>&gt;=</code>\u6307\u5b9a<code>id</code>\u7684<code>Iterator</code>\uff0c<code>upperbound</code>\u65b9\u6cd5\u8fd4\u56de<code>&gt;</code>\u6307\u5b9a<code>id</code>\u7684<code>Iterator</code>\uff0c\u4e0b\u9762\u6765\u770b\u4e0b\u7528\u6cd5\uff1a</p> <pre><code># db_example4.codon\n\nfrom chain.database import PrimaryTable\nfrom chain.contract import Contract\n\n@packer\nclass A(object):\n    a: u64\n    b: str\n    def __init__(self, a: u64, b: str):\n        self.a = a\n        self.b = b\n\n    def get_primary(self) -&gt; u64:\n        return self.a\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        print('db_test')\n        table = PrimaryTable[A](n'hello', n'', n'mytable')\n        payer = n'hello'\n\n        value = A(1u64, \"alice\")\n        table.store(value, payer)\n\n        value = A(3u64, \"bob\")\n        table.store(value, payer)\n\n        value = A(5u64, \"john\")\n        table.store(value, payer)\n\n        it = table.lowerbound(1u64)\n        value2: A = it.get_value()\n        print(\"+++++:\", value2.a, value2.b)\n        assert value2.a == 1u64 and value2.b == 'alice'\n\n        it = table.upperbound(1u64)\n        value2: A = it.get_value()\n        print(\"+++++:\", value2.a, value2.b)\n        assert value2.a == 3u64 and value2.b == 'bob'\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a <pre><code>def test_example4():\n    t = init_db_test('db_example4')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre></p> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example4.codon\n</code></pre> <p>\u8fd0\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_example4\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>+++++: 1 alice\n+++++: 3 bob\n</code></pre>"},{"location":"database/#api","title":"\u5229\u7528API\u6765\u5bf9\u8868\u8fdb\u884c\u4e3b\u7d22\u5f15\u67e5\u8be2","text":"<p>\u4e0a\u9762\u7684\u4f8b\u5b50\u90fd\u662f\u8bb2\u7684\u5982\u679c\u901a\u8fc7\u667a\u80fd\u5408\u7ea6\u6765\u64cd\u4f5c\u94fe\u4e0a\u7684\u6570\u636e\u5e93\u7684\u8868\uff0c\u5b9e\u9645\u4e0a\uff0c\u901a\u8fc7EOS\u63d0\u4f9b\u7684\u94fe\u4e0b\u7684<code>get_table_rows</code>\u7684API\u7684\u63a5\u53e3\uff0c\u4e5f\u540c\u6837\u53ef\u4ee5\u5bf9\u94fe\u4e0a\u7684\u8868\u8fdb\u884c\u67e5\u8be2\u5de5\u4f5c\u3002 \u5728\u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0cget_table_rows\u7684\u5b9a\u4e49\u5982\u4e0b</p> <pre><code>def get_table_rows(self, _json, code, scope, table,\n                                lower_bound, upper_bound,\n                                limit,\n                                key_type='',\n                                index_position='', \n                                reverse = False,\n                                show_payer = False):\n\"\"\" Fetch smart contract data from an account. \n    key_type: \"i64\"|\"i128\"|\"i256\"|\"float64\"|\"float128\"|\"sha256\"|\"ripemd160\"\n    index_position: \"2\"|\"3\"|\"4\"|\"5\"|\"6\"|\"7\"|\"8\"|\"9\"|\"10\"\n    \"\"\"\n</code></pre> <p>\u9996\u5148\uff0c\u8981\u901a\u8fc7<code>get_table_rows</code>\u6765\u67e5\u8be2\u8868\uff0c\u8868\u7684\u7ed3\u6784\u5fc5\u987b\u5728ABI\u7684\u63cf\u8ff0\u4e2d\u53ef\u89c1\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u8ba9\u8868\u5728\u751f\u6210\u76f8\u5e94\u7684ABI\u6587\u4ef6\u4e2d\u6709\u63cf\u8ff0\uff1a</p> <pre><code># db_example5.codon\n\nfrom chain.database import PrimaryTable, primary\nfrom chain.contract import Contract\n\n@table(\"mytable\")\nclass A(object):\n    a: primary[u64]\n    b: str\n    def __init__(self, a: u64, b: str):\n        self.a = primary[u64](a)\n        self.b = b\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        print('db_test')\n        table = PrimaryTable[A](n'hello', n'', n'mytable')\n        payer = n'hello'\n\n        value = A(1u64, \"alice\")\n        table.store(value, payer)\n\n        value = A(3u64, \"bob\")\n        table.store(value, payer)\n\n        value = A(5u64, \"john\")\n        table.store(value, payer)\n\n        it = table.lowerbound(1u64)\n        value2: A = it.get_value()\n        print(\"+++++:\", value2.a, value2.b)\n        assert value2.a() == 1u64 and value2.b == 'alice'\n\n        it = table.upperbound(1u64)\n        value2: A = it.get_value()\n        print(\"+++++:\", value2.a, value2.b)\n        assert value2.a() == 3u64 and value2.b == 'bob'\n</code></pre> <p>\u8fd9\u91cc\uff0c\u901a\u8fc7<code>table</code>\u8fd9\u4e2a\u5185\u7f6e\u7684<code>decorator</code>\u6765\u8ba9\u7f16\u8bd1\u5668\u5728ABI\u4e2d\u52a0\u5165\u8868\u7684\u7ed3\u6784\u3002 \u7ed9\u7c7b\u52a0\u4e86\u8fd9\u4e2a<code>table</code>\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u7ed9\u7c7b\u6dfb\u52a0\u4ee5\u4e0b\u4e09\u4e2a\u51fd\u6570\uff1a</p> <pre><code>get_primary\nset_secondary_value\nget_secondary_value\n</code></pre> <p>\u540c\u65f6\uff0c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4e5f\u8981\u6ee1\u8db3\u76f8\u5e94\u7684\u8981\u6c42\uff1a \u9996\u5148\uff0c\u5fc5\u987b\u58f0\u660e\u4e00\u4e2a\u4e3b\u7d22\u5f15\u53d8\u91cf\uff0c\u7c7b\u578b\u5fc5\u987b\u662f<code>database.primary</code>, <code>primary</code>\u7c7b\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>class primary[T](object):\n    value: T\n    def __init__(self, value: T):\n        self.value = value\n\n    def get_primary(self) -&gt; u64:\n        if isinstance(self.value, u64):\n            return self.value\n        return self.value.get_primary()\n\n    def __pack__(self, enc: Encoder):\n        self.value.__pack__(enc)\n\n    def __unpack__(dec: Decoder) -&gt; primary[T]:\n        return primary[T](T.__unpack__(dec))\n\n    def __call__(self) -&gt; T:\n        return self.value\n\n    def __size__(self) -&gt; int:\n        return self.value.__size__()\n</code></pre> <p><code>primary</code>\u7c7b\u662f\u4e00\u4e2a\u6a21\u7248\u7c7b\uff0c\u5982\u679c<code>primary</code>\u7684<code>value</code>\u7684\u7c7b\u578b\u4e0d\u4e3a<code>u64</code>\uff0c\u5219\u7c7b\u578b\u5fc5\u987b\u5b9e\u73b0<code>get_primary</code>\u65b9\u6cd5\uff0c<code>primary</code>\u7c7b\u8fd8\u6709\u4e00\u4e2a<code>__call__</code>\u65b9\u6cd5\uff0c\u4ee5\u65b9\u4fbf\u83b7\u53d6<code>value</code>\u3002\u5728\u540e\u9762\u4f1a\u8bb2\u5230\u7684\u591a\u91cd\u7d22\u5f15\u4e2d\uff0c\u8fd8\u4f1a\u7528\u5230\u4e8c\u6781\u7d22\u5f15\uff0c\u4e8c\u6781\u7d22\u5f15\u7684\u7c7b\u578b\u5fc5\u987b\u662f<code>database.secondary</code></p> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example5.codon\n</code></pre> <p>\u4f60\u5c06\u5728\u751f\u6210\u7684<code>db_example5.abi</code>\u4e2d\u770b\u5230\u4e0b\u9762\u7684\u63cf\u8ff0\uff1a <pre><code>\"tables\": [\n{\n\"name\": \"mytable\",\n            \"type\": \"A\",\n            \"index_type\": \"i64\",\n            \"key_names\": [],\n            \"key_types\": []\n}\n]\n</code></pre></p> <p>\u518d\u770b\u4e0b\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def test_example5():\n    t = init_db_test('db_example5')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n    rows = t.get_table_rows(True, 'hello', '', 'mytable', 1, '', 10)\n    logger.info('++++++=rows: %s', rows)\n</code></pre> <p>\u8fd0\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_example5\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>++++++=rows: {'rows': [{'a': 1, 'b': 'alice'}, {'a': 3, 'b': 'bob'}, {'a': 5, 'b': 'john'}], 'more': False, 'next_key': ''}\n</code></pre>"},{"location":"database/#_2","title":"\u4e8c\u7ea7\u7d22\u5f15\u7684\u5b9e\u73b0","text":"<p>\u667a\u80fd\u5408\u7ea6\u4e2d\uff0c\u4e00\u4e2a\u8868\u53ef\u4ee5\u67091\u4e2a\u6216\u8005\u591a\u4e2a\u4e8c\u7ea7\u7d22\u5f15\uff0c\u6700\u591a\u53ef\u4ee5\u670916\u4e2a\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <pre><code># db_example6.codon\nfrom chain.contract import Contract\nfrom chain.database import primary, secondary\nfrom chain.database import IdxTable64, IdxTable128, SecondaryValue, Iterator\nfrom chain.mi import MultiIndexBase\nfrom chain.name import Name\n\n@packer\nclass A(object):\n    a: database.primary[u64]\n    b: secondary[u64]\n    c: secondary[u128]\n\n    def __init__(self, a: u64, b: u64, c: u128):\n        self.a = primary[u64](a)\n        self.b = secondary[u64](b)\n        self.c = secondary[u128](c)\n\n    def get_primary(self) -&gt; u64:\n        return self.a()\n\n    def get_secondary_value(self, index: int) -&gt; SecondaryValue:\n        if index == 0:\n            return SecondaryValue(self.b())\n        elif index == 1:\n            return SecondaryValue(self.c())\n        assert False\n\n    def set_secondary_value(self, index: int, value: SecondaryValue):\n        if index == 0:\n            self.b = value\n        elif index == 1:\n            self.c = value\n        assert False\n\nclass MultiIndexA(MultiIndexBase[A]):\n    idx_b: IdxTable64\n    idx_c: IdxTable128\n\n    def __init__(self, code: Name, scope: Name, table: Name):\n        super().__init__(code, scope, table)\n        idx_table_base = table.value &amp; 0xfffffffffffffff0u64\n        self.idx_b = IdxTable64(0, code, scope, Name(idx_table_base | u64(0)))\n        self.idx_c = IdxTable128(1, code, scope, Name(idx_table_base | u64(1)))\n\n    def store(self, item: A, payer: Name) -&gt; Iterator[A]:\n        id: u64 = item.get_primary()\n        it = self.table.store(item, payer)\n        secondary = item.get_secondary_value(0)\n        self.idx_b.store(id, secondary.get_value_u64(), payer)\n\n        secondary = item.get_secondary_value(1)\n        self.idx_c.store(id, secondary.get_value_u128(), payer)\n\n        return it\n\n    def update(self, it: Iterator[A], item: A, payer: Name):\n        self.table.update(it, item, payer)\n\n        primary = item.get_primary()\n        secondary = item.get_secondary_value(0).get_value_u64()\n        it_secondary, old_secondary = self.idx_b.find_by_primary(primary)\n        if not secondary == old_secondary:\n            self.idx_b.update(it_secondary, secondary, payer)\n\n        secondary = item.get_secondary_value(1).get_value_u128()\n        it_secondary, old_secondary = self.idx_c.find_by_primary(primary)\n        if not secondary == old_secondary:\n            self.idx_c.update(it_secondary, secondary, payer)\n\n    def remove(self, it: Iterator[A]):\n        sec_it, _ = self.idx_b.find_by_primary(it.get_primary())\n        self.idx_b.remove(sec_it)\n\n        sec_it, _ = self.idx_c.find_by_primary(it.get_primary())\n        self.idx_c.remove(sec_it)\n\n        self.table.remove(it)\n\n    def get_idx_table_by_b(self) -&gt; IdxTable64:\n        return self.idx_b\n\n    def get_idx_table_by_c(self) -&gt; IdxTable128:\n        return self.idx_c\n\n@extend\nclass A:\n    def new_table(code: Name, scope: Name):\n        return MultiIndexA(code, scope, n\"mytable\")\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        payer = n\"hello\"\n        table = A.new_table(n\"hello\", n\"\")\n        item = A(1u64, 2u64, 3u128)\n        table.store(item, payer)\n\n        idx_table_b = table.get_idx_table_by_b()\n        it = idx_table_b.find(2u64)\n        print(\"++++++it.primary:\", it.primary)\n        assert it.primary == 1u64\n\n        idx_table_c = table.get_idx_table_by_c()\n        it = idx_table_c.find(3u128)\n        print(\"++++++it.primary:\", it.primary)\n        assert it.primary == 1u64\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u6709\u4e8c\u4e2a\u4e8c\u7ea7\u7d22\u5f15\u7684\u4f8b\u5b50\uff0c\u901a\u8fc7<code>get_idx_table_by_b</code>\u548c<code>get_idx_table_by_c</code>\u83b7\u53d6\u4e8c\u7ea7\u7d22\u5f15\u7684\u8868\uff0c\u5bf9\u5e94\u7684\u7c7b\u5206\u522b\u662f<code>IdxTable64</code>\u548c<code>IdxTable128</code>\u3002\u901a\u8fc7<code>find</code>\u6765\u67e5\u627e\u5bf9\u5e94\u7684\u503c\uff0c\u518d\u4ece\u8fd4\u56de\u7684<code>SecondaryIterator</code>\u7684\u7c7b\u578b\u4e2d\u5224\u65ad<code>primary</code>\u7684\u503c\u662f\u5426\u6b63\u786e\u3002</p> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def test_example6():\n    t = init_db_test('db_example6')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example6.codon\n</code></pre> <p>\u8fd0\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_example6\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>++++++it.primary: 1\n++++++it.primary: 1\n</code></pre>"},{"location":"database/#_3","title":"\u4e8c\u7ea7\u7d22\u5f15\u7684\u5b9e\u73b0\u7684\u7b80\u5316","text":"<p>\u4e0a\u9762\u7684\u4f8b\u5b50\u7684\u4e8c\u7ea7\u7d22\u5f15\u7684\u5b9e\u73b0\u770b\u4e0a\u53bb\u8fd8\u662f\u6bd4\u8f83\u7684\u590d\u6742\uff0c\u8981\u5b9e\u73b0<code>get_primary</code>, <code>get_secondary_value</code>, <code>set_secondary_value</code>\u8fd9\u4e09\u65b9\u6cd5\u3002 \u5e76\u4e14\u8fd8\u8981\u5b9e\u73b0<code>MultiIndexA</code>\u8fd9\u4e2a\u7c7b\uff0c\u800c\u5b9e\u9645\u4e0a\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u529e\u6cd5\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> <pre><code># db_example7.codon\n\nfrom chain.contract import Contract\nfrom chain.database import primary, secondary\nfrom chain.database import IdxTable64, IdxTable128, SecondaryValue, Iterator\nfrom chain.name import Name\n\n@table(\"mytable\")\nclass A(object):\n    a: database.primary[u64]\n    b: secondary[u64]\n    c: secondary[u128]\n\n    def __init__(self, a: u64, b: u64, c: u128):\n        self.a = primary[u64](a)\n        self.b = secondary[u64](b)\n        self.c = secondary[u128](c)\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        payer = n\"hello\"\n        table = A.new_table(n\"hello\", n\"\")\n        item = A(1u64, 2u64, 3u128)\n        table.store(item, payer)\n\n        idx_table_b = table.get_idx_table_by_b()\n        it = idx_table_b.find(2u64)\n        print(\"++++++it.primary:\", it.primary)\n        assert it.primary == 1u64\n\n        idx_table_c = table.get_idx_table_by_c()\n        it = idx_table_c.find(3u128)\n        print(\"++++++it.primary:\", it.primary)\n        assert it.primary == 1u64\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c06<code>class A</code>\u7684decorator\u4ece<code>packer</code>\u6539\u6210<code>table</code>\uff0c\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u5373\u4f1a\u751f\u6210\u5176\u5b83\u76f8\u5173\u7684\u4ee3\u7801\u3002</p> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code># test.py\ndef test_example7():\n    t = init_db_test('db_example7')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build db_example/db_example7.codon\n</code></pre> <p>\u8fd0\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_example7\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>++++++it.primary: 1\n++++++it.primary: 1\n</code></pre>"},{"location":"database/#_4","title":"\u4e8c\u7ea7\u7d22\u5f15\u7684\u7684\u66f4\u65b0","text":"<p>\u5728\u5b9e\u9645\u7684\u5e94\u7528\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u66f4\u65b0\u4e8c\u7ea7\u7d22\u5f15\u3002\u8bf7\u5148\u770b\u4e0b\u9762\u7684\u4ee3\u7801</p> <pre><code># db_example8.codon\nfrom chain.contract import Contract\nfrom chain.database import primary, secondary\nfrom chain.database import IdxTable64, IdxTable128, SecondaryValue, Iterator\nfrom chain.name import Name\n\n@table(\"mytable\")\nclass A(object):\n    a: database.primary[u64]\n    b: secondary[u64]\n    c: secondary[u128]\n\n    def __init__(self, a: u64, b: u64, c: u128):\n        self.a = primary[u64](a)\n        self.b = secondary[u64](b)\n        self.c = secondary[u128](c)\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('test')\n    def test(self):\n        payer = n\"hello\"\n        table = A.new_table(n\"hello\", n\"\")\n        item = A(1u64, 2u64, 3u128)\n        table.store(item, payer)\n        item = A(111u64, 222u64, 333u128)\n        table.store(item, payer)\n\n        idx_table_b = table.get_idx_table_by_b()\n        it_sec = idx_table_b.find(2u64)\n        print(\"++++++it.primary:\", it_sec.primary)\n        assert it_sec.primary == 1u64\n\n        it = table.find(it_sec.primary)\n        value: A = it.get_value()\n        value.b = secondary[u64](22u64)\n        table.update(it, value, payer)\n\n        it_sec = idx_table_b.find(22u64)\n        print(\"++++++it.primary:\", it_sec.primary)\n        assert it_sec.primary == 1u64\n</code></pre> <p>\u6ce8\u610f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u8fd9\u6bb5\u4ee3\u7801\uff1a</p> <pre><code>idx_table_b = table.get_idx_table_by_b()\nit_sec = idx_table_b.find(2u64)\nprint(\"++++++it.primary:\", it_sec.primary)\nassert it_sec.primary == 1u64\n\nit = table.find(it_sec.primary)\nvalue: A = it.get_value()\nvalue.b = secondary[u64](22u64)\ntable.update(it, value, payer)\n\nit_sec = idx_table_b.find(22u64)\nassert it_sec.is_ok()\nprint(\"++++++it.primary:\", it_sec.primary)\nassert it_sec.primary == 1u64\n</code></pre> <p>\u7b80\u8ff0\u4e0b\u8fc7\u7a0b\uff1a</p> <ul> <li><code>it_sec = idx_table_b.find(2u64)</code>\u67e5\u627e\u4e8c\u7ea7\u7d22\u5f15\u7684\u503c<code>2u64</code>\uff0c\u8fd4\u56de\u7684<code>SecondarIterator</code>\u7c7b\u578b\u7684<code>it_sec</code>\u3002</li> <li><code>it = table.find(it_sec.primary)</code>\u67e5\u627e\u4e3b\u7d22\u5f15\uff0c\u4ee3\u7801<code>value: A = it.get_value()</code>\u83b7\u53d6\u5bf9\u5e94\u7684<code>A</code>\u7684\u503c\uff0c</li> <li><code>value.b = secondary[u64](22u64)</code>\u66f4\u65b0<code>A</code>\u7684\u4e8c\u7ea7\u7d22\u5f15\u7684\u503c\u4e3a<code>22u64</code></li> <li><code>table.update(it, value, payer)</code>\u5c06\u66f4\u65b0\u540e\u7684<code>A</code>\u503c\u66f4\u65b0\u5230\u8868\u91cc\u3002</li> <li><code>it_sec = idx_table_b.find(22u64)</code>\u67e5\u627e\u65b0\u7684\u4e8c\u7ea7\u7d22\u5f15</li> <li><code>assert it_sec.primary == 1u64</code>\u7528\u4e8e\u68c0\u67e5\u4e3b\u7d22\u5f15\u662f\u5426\u6b63\u786e</li> </ul>"},{"location":"database/#api_1","title":"\u5229\u7528API\u6765\u5bf9\u8868\u8fdb\u884c\u4e8c\u91cd\u7d22\u5f15\u67e5\u8be2","text":"<p>\u5728\u4f8b\u5b50<code>db_example8.codon</code>\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e8c\u7ea7\u7d22\u5f15\uff0c\u7c7b\u578b\u5206\u522b\u4e3a<code>u64</code>,<code>u128</code>\uff0c<code>get_table_rows</code>API\u8fd8\u652f\u6301\u901a\u8fc7\u4e8c\u7ea7\u7d22\u5f15\u6765\u67e5\u627e\u5bf9\u5e94\u7684\u503c</p> <pre><code>def test_example9():\n    t = init_db_test('db_example8')\n    ret = t.push_action('hello', 'test', {}, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n\n    # find by secondary u64\n    rows = t.get_table_rows(True, 'hello', '', 'mytable', 22, '', 10, 'i64', '2')\n    logger.info(\"++++++++++%s\", rows['rows'])\n    assert rows['rows'][0]['b'] == 22\n\n    # find by secondary u128\n    rows = t.get_table_rows(True, 'hello', '', 'mytable', '3', '', 10, 'i128', '3')\n    logger.info(\"++++++++++%s\", rows['rows'])\n    assert rows['rows'][0]['c'] == '3'\n</code></pre> <p>\u4e0b\u9762\u5bf9\u4ee3\u7801\u4f5c\u4e0b\u89e3\u91ca</p> <p>\u901a\u8fc7\u4e8c\u7ea7\u7d22\u5f15<code>b</code>\u6765\u67e5\u627e\u8868\u4e2d\u7684\u503c\uff1a</p> <pre><code>rows = t.get_table_rows(True, 'hello', '', 'mytable', 22, '', 10, 'i64', '2')\n</code></pre> <p>\u8fd9\u91cc\u7684<code>i64</code>\u5373\u662f<code>b</code>\u7684\u7d22\u5f15\u7c7b\u578b\uff0c<code>2</code>\u662f\u7d22\u5f15\u5bf9\u5e94\u7684\u5e8f\u53f7\uff0c\u6ce8\u610f\u4e00\u4e0b\u8fd9\u91cc\u4e0d\u662f\u4ece<code>1</code>\u5f00\u59cb\u7b97\u8d77\u7684\u3002</p> <p>\u901a\u8fc7\u4e8c\u7ea7\u7d22\u5f15<code>c</code>\u6765\u67e5\u627e\u8868\u4e2d\u7684\u503c\uff1a</p> <pre><code>rows = t.get_table_rows(True, 'hello', '', 'mytable', '3', '', 10, 'i128', '3')\n</code></pre> <p>\u8fd9\u91cc\u7684<code>i128</code>\u5373\u662f<code>c</code>\u7684\u7d22\u5f15\u7c7b\u578b\uff0c\u6ce8\u610f\u8fd9\u91cclowerbound\u53c2\u6570\u7684\u503c<code>3</code>\u662f\u4e8c\u7ea7\u7d22\u5f15\u7684\u503c\uff0c\u7531\u4e8eu128\u5df2\u7ecf\u8d85\u8fc7\u4e8664\u4f4d\u6574\u6570\u7684\u8868\u793a\u8303\u56f4\uff0c\u6240\u4ee5\u7528\u6570\u5b57\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570<code>3</code>\u662f\u7d22\u5f15\u5bf9\u5e94\u7684\u5e8f\u53f7\u3002</p> <p>\u4e0a\u9762\u7684\u6d4b\u8bd5\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>++++++++++[{'a': 1, 'b': 22, 'c': '3'}, {'a': 111, 'b': 222, 'c': '333'}]\n++++++++++[{'a': 1, 'b': 22, 'c': '3'}, {'a': 111, 'b': 222, 'c': '333'}]\n</code></pre>"},{"location":"env/","title":"\u5f00\u53d1\u73af\u5883\u642d\u5efa","text":""},{"location":"env/#_2","title":"\u5b89\u88c5\u7f16\u8bd1\u548c\u6d4b\u8bd5\u6240\u9700\u7684\u5de5\u5177","text":""},{"location":"env/#_3","title":"\u76f4\u63a5\u5b89\u88c5\u5f00\u53d1\u5de5\u5177\u5305","text":"<p>\u5b89\u88c5pscdk\u5305\uff0c\u8fd9\u4e2a\u5305\u7528\u4e8e\u7f16\u8bd1Python\u667a\u80fd\u5408\u7ea6</p> <pre><code>python3 -m pip install pscdk\n</code></pre> <p>\u5b89\u88c5ipyeos\u5305\uff0c\u8fd9\u4e2a\u5305\u7528\u4e8e\u6d4b\u8bd5\u667a\u80fd\u5408\u7ea6</p> <pre><code>python3 -m pip install ipyeos\n</code></pre>"},{"location":"env/#docker","title":"\u7528Docker\u8fd0\u884c","text":"<p>MAC\u5e73\u53f0\u63a8\u8350\u4f7f\u7528OrbStack\u8f6f\u4ef6\u6765\u5b89\u88c5docker\u548c\u8fd0\u884cdocker\u3002\u5176\u5b83\u5e73\u53f0\u53ef\u4ee5\u4f7f\u7528Docker Desktop\u3002</p> <p>\u4e0b\u8f7dDocker\u955c\u50cf</p> <pre><code>docker pull ghcr.io/uuosio/pscdk:latest\n</code></pre> <p>\u8fd0\u884ccontainer:</p> <pre><code>docker run --entrypoint bash -it --rm -v \"$(pwd)\":/work -t ghcr.io/uuosio/pscdk\n</code></pre>"},{"location":"env/#_4","title":"\u6d4b\u8bd5\u5b89\u88c5\u73af\u5883\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a","text":"<p>\u65b0\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\uff1a</p> <pre><code>python-contract init mytest\n</code></pre> <p>\u7f16\u8bd1\u5408\u7ea6\u4ee3\u7801\uff1a <pre><code>python-contract build mytest.codon\n</code></pre></p> <p>\u6216\u8005\u76f4\u63a5\u8fd0\u884c<code>build.sh</code>\u811a\u672c\uff1a</p> <pre><code>./build.sh\n</code></pre> <p>\u4e0d\u51fa\u5f02\u5e38\u4f1a\u751f\u6210<code>mytest.wasm</code>\u8fd9\u4e2aWebAssembly\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6</p> <p>\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_hello\n</code></pre> <p>\u6216\u8005\u76f4\u63a5\u8fd0\u884c\u6d4b\u8bd5\u811a\u672c<code>test.sh</code>\uff1a</p> <pre><code>./test.sh\n</code></pre> <p>\u6b63\u5e38\u4f1a\u770b\u5230\u8f93\u51fa\uff1a</p> <pre><code>hello  alice\n</code></pre>"},{"location":"helloworld/","title":"HelloWorld","text":""},{"location":"helloworld/#_1","title":"\u7b2c\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6","text":"<p>\u4ee5\u4e0b\u5c55\u793a\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u548c\u6d4b\u8bd5\u4ee3\u7801</p> <pre><code># helloworld.codon\n\nfrom chain.contract import Contract\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    def __init__(self):\n        super().__init__()\n\n    @action('sayhello')\n    def say_hello(self):\n        print(\"Hello, World!\")\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code># helloworldtest.py\n\nimport os\nfrom ipyeos import chaintester\nfrom ipyeos.chaintester import ChainTester\nfrom ipyeos import log\n\nchaintester.chain_config['contracts_console'] = True\n\nlogger = log.get_logger(__name__)\n\ndir_name = os.path.dirname(os.path.abspath(__file__))\n\ndef init_test(contract_name):\n    t = ChainTester(True)\n    wasm_file = os.path.join(dir_name, f'{contract_name}.wasm')\n    with open(wasm_file, 'rb') as f:\n        code = f.read()\n\n    abi_file = os.path.join(dir_name, f'{contract_name}.abi')\n    with open(abi_file, 'r') as f:\n        abi = f.read()\n\n    t.deploy_contract('hello', code, abi)\n    t.produce_block()\n    return t\n\ndef test():\n    t = init_test('helloworld')\n    ret = t.push_action('hello', 'sayhello', \"\", {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u7f16\u8bd1\uff1a</p> <pre><code>python-contract build helloworld.codon\n</code></pre> <p>\u8fd0\u884c\u6d4b\u8bd5\u4ee3\u7801\uff1a <pre><code>ipyeos -m pytest -s -x testhelloworld.py -k test\n</code></pre></p> <p>\u8f93\u51fa\uff1a</p> <pre><code>Hello, World!\n</code></pre>"},{"location":"helloworld/#_2","title":"\u521b\u5efa\u4e00\u4e2a\u521d\u59cb\u9879\u76ee","text":"<p>\u53ef\u4ee5\u7528<code>python-contract init</code>\u547d\u4ee4\u6765\u521b\u5efa\u4e00\u4e2a\u521d\u59cb\u9879\u76ee\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a<code>mycontract</code>\u7684\u521d\u59cb\u9879\u76ee\uff1a</p> <pre><code>python-contract init mycontract\n</code></pre> <p>\u521b\u5efa\u5b8c\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u7f16\u8bd1\u5408\u7ea6\uff1a</p> <pre><code>cd mycontract\n./build.sh\n</code></pre> <p>\u6267\u884c\u6210\u529f\u540e\u4f1a\u751f\u6210<code>mycontract.wasm</code>\u548c<code>mycontract.abi</code>\u8fd9\u4e24\u4e2a\u6587\u4ef6</p> <p>\u53ef\u4ee5\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u8fdb\u884c\u6d4b\u8bd5\uff1a <pre><code>./test.sh\n</code></pre></p> <p>\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <pre><code>[(hello,sayhello)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\nhello  alice\n\n[(hello,sayhello)-&gt;hello]: CONSOLE OUTPUT END   =====================\n</code></pre> <p>\u786e\u8ba4\u6d4b\u8bd5\u6210\u529f\u540e\u5373\u53ef\u5728\u73b0\u6709\u7684\u9879\u76ee\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u667a\u80fd\u5408\u7ea6\u7684\u5f00\u53d1\u3002</p>"},{"location":"notify/","title":"require_recipient\u51fd\u6570","text":"<p>\u51fd\u6570\u5728<code>`action.codon</code>\u4e2d\u7684\u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>def require_recipient(account: Name):\n</code></pre> <p><code>require_recipient</code>\u51fd\u6570\u7528\u6765\u901a\u77e5\u5176\u5b83\u5408\u7ea6\uff0c\u5982\u679caccount\u5408\u7ea6\u6709\u76f8\u540c\u7684action\uff0c\u90a3\u4e48\u8fd9\u4e2aaction\u5c06\u88ab\u8c03\u7528\u3002</p> <p>\u4ee5\u4e0b\u7684<code>sender.codon</code>, <code>receiver.codon</code>\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4ece\u4e00\u4e2a\u5408\u7ea6\u53d1\u9001\u901a\u77e5\u5230\u53e6\u4e00\u4e2a\u5408\u7ea6\u3002</p> <pre><code># sender.codon\nfrom chain.name import Name\nfrom chain.contract import Contract\nfrom chain.action import require_recipient\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    @action('sayhello')\n    def sayhello(self, receiver: Name):\n        print('hello, world')\n        require_recipient(receiver)\n</code></pre> <pre><code># receiver.codon\nfrom chain.name import Name\nfrom chain.contract import Contract\n\n@contract(main=True)\nclass MyContract(Contract):\n\n    @action('sayhello', notify=True)\n    def sayhello(self, receiver: Name):\n        assert not self.receiver == self.first_receiver\n        assert receiver == self.receiver\n        print('hello, world from notify')\n</code></pre> <p>\u8fd9\u91cc\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>receiver.codon</code>\u4e2d\u7684<code>sayhello</code>\u51fd\u6570\u548c<code>sender.codon</code>\u4e2d\u7684<code>sayhello</code>\u51fd\u6570\u7684\u5b9a\u4e49\u6709\u4e9b\u4e0d\u540c\uff0c<code>receiver.codon</code>\u4e2d\u7684<code>sayhello</code>\u7684<code>action</code>decorator\u4e2d\u591a\u4e86<code>notify=True</code>\uff0c\u8fd9\u662f\u7528\u6765\u6307\u5b9a\u8fd9\u4e2aaction\u662f\u4e00\u4e2a\u7528\u6765\u63a5\u6536\u901a\u77e5\u7684action\uff0c\u53ea\u80fd\u901a\u8fc7\u8c03\u7528<code>require_recipient</code>\u6765\u89e6\u53d1\u3002</p> <p>\u4ee5\u4e0b\u662f\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> <pre><code>def init_notify():\n    t = ChainTester(True)\n    update_auth(t, 'hello')\n\n    wasm_file = os.path.join(dir_name, 'notify/sender.wasm')\n    with open(wasm_file, 'rb') as f:\n        code = f.read()\n    abi_file = os.path.join(dir_name, 'notify/sender.abi')\n    with open(abi_file, 'r') as f:\n        abi = f.read()\n    t.deploy_contract('hello', code, abi)\n    t.produce_block()\n\n    wasm_file = os.path.join(dir_name, 'notify/receiver.wasm')\n    with open(wasm_file, 'rb') as f:\n        code = f.read()\n    abi_file = os.path.join(dir_name, 'notify/receiver.abi')\n    with open(abi_file, 'r') as f:\n        abi = f.read()\n    t.deploy_contract('alice', code, abi)\n    t.produce_block()\n    return t\n\ndef test_notify():\n    t = init_notify()\n    args = {'receiver': 'alice'}\n    ret = t.push_action('hello', 'sayhello', args, {'hello': 'active'})\n    t.produce_block()\n    logger.info(\"++++++++++%s\\n\", ret['elapsed'])\n</code></pre> <p>\u7f16\u8bd1\uff1a <pre><code>python-contract build notify/receiver.codon\npython-contract build notify/sender.codon\n</code></pre></p> <p>\u6d4b\u8bd5\uff1a</p> <pre><code>ipyeos -m pytest -s -x test.py -k test_notify\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>[(hello,sayhello)-&gt;hello]: CONSOLE OUTPUT BEGIN =====================\nhello, world\n\n[(hello,sayhello)-&gt;hello]: CONSOLE OUTPUT END   =====================\ndebug 2023-03-28T13:08:01.110 thread-0  apply_context.cpp:30          print_debug          ] \n[(hello,sayhello)-&gt;alice]: CONSOLE OUTPUT BEGIN =====================\nhello, world from notify\n\n[(hello,sayhello)-&gt;alice]: CONSOLE OUTPUT END   =====================\n</code></pre>"},{"location":"prelude/","title":"\u9884\u5907\u77e5\u8bc6","text":""},{"location":"prelude/#eos","title":"\u4ec0\u4e48\u662fEOS","text":"<p>EOS\u662f\u4e00\u4e2a\u57fa\u4e8e\u4ee3\u7406\u6743\u76ca\u8bc1\u660e(DPOS - Delegated Proof of Stake)\u5171\u8bc6\u7b97\u6cd5\u7684\u533a\u5757\u94fe\u7f51\u7edc\u3002\u4e3b\u7f51\u4e8e2018\u5e74\u76846\u67088\u53f7\u6b63\u5f0f\u4e0a\u7ebf\u3002EOS\u7684\u4e3b\u7f51\u753121\u4e2a\u5757\u751f\u4ea7\u8005(Block Producer)\u63a7\u5236\uff0c\u5757\u751f\u4ea7\u8005\u7b80\u79f0\u4e3aBP\uff0c\u7531\u6295\u7968\u4ea7\u751f\uff0c\u8d1f\u8d23\u5c06\u4ea4\u6613(Transaction)\u6253\u5305\u5230\u533a\u5757\u4e2d\u3002</p>"},{"location":"prelude/#account","title":"\u8d26\u53f7(Account)","text":"<p>\u5728EOS\u533a\u5757\u94fe\u4e0a\uff0c\u6bcf\u4e00\u4e2a\u4ea4\u6613\u7684\u5b9e\u4f53\u7528\u4e00\u4e2a\u8d26\u53f7\u8868\u793a\u3002\u8d26\u53f7\u7684\u540d\u79f0\u662f\u4e00\u4e2aname\u7ed3\u6784\uff0c\u5728\u4e0b\u4e00\u8282\u4f1a\u8bb2\u5230\u3002\u8d26\u53f7\u5728C++\u4ee3\u7801\u91cc\u8868\u793a\u7684\u7ed3\u6784\u6bd4\u8f83\u590d\u6742\u3002</p> <p>\u4e0b\u9762\u662f\u901a\u8fc7EOS\u7684<code>get_account</code>RPC\u63a5\u53e3\u8fd4\u56de\u7684\u4fe1\u606f\u6765\u5206\u96c6\u4e00\u4e0b\u5305\u542b\u5728\u8d26\u53f7\u91cc\u7684\u4fe1\u606f\uff1a</p> <pre><code>{\n\"account_name\": \"testaccount\",\n\"head_block_num\": 301601062,\n\"head_block_time\": \"2023-03-28T06:19:09.500\",\n\"privileged\": false,\n\"last_code_update\": \"1970-01-01T00:00:00.000\",\n\"created\": \"2018-06-13T04:43:18.000\",\n\"core_liquid_balance\": \"0.0001 EOS\",\n\"ram_quota\": 3052,\n\"net_weight\": 0,\n\"cpu_weight\": 0,\n\"net_limit\": {\n\"used\": 0,\n\"available\": 0,\n\"max\": 0,\n\"last_usage_update_time\": \"2018-06-13T04:43:18.000\",\n\"current_used\": 0\n},\n\"cpu_limit\": {\n\"used\": 0,\n\"available\": 0,\n\"max\": 0,\n\"last_usage_update_time\": \"2018-06-13T04:43:18.000\",\n\"current_used\": 0\n},\n\"ram_usage\": 2996,\n\"permissions\": [\n{\n\"perm_name\": \"active\",\n\"parent\": \"owner\",\n\"required_auth\": {\n\"threshold\": 1,\n\"keys\": [\n{\n\"key\": \"EOS5eCkKszJt22****Y2YampuDDD8q95w2mF\",\n\"weight\": 1\n}\n],\n\"accounts\": [],\n\"waits\": []\n},\n\"linked_actions\": []\n},\n{\n\"perm_name\": \"owner\",\n\"parent\": \"\",\n\"required_auth\": {\n\"threshold\": 1,\n\"keys\": [\n{\n\"key\": \"EOS5eCkKszJ****q95w2mF\",\n\"weight\": 1\n}\n],\n\"accounts\": [],\n\"waits\": []\n},\n\"linked_actions\": []\n}\n],\n\"total_resources\": {\n\"owner\": \"helloworld11\",\n\"net_weight\": \"0.0000 EOS\",\n\"cpu_weight\": \"0.0000 EOS\",\n\"ram_bytes\": 3052\n},\n\"self_delegated_bandwidth\": null,\n\"refund_request\": null,\n\"voter_info\": null,\n\"rex_info\": null,\n\"subjective_cpu_bill_limit\": {\n\"used\": 0,\n\"available\": 0,\n\"max\": 0,\n\"last_usage_update_time\": \"2000-01-01T00:00:00.000\",\n\"current_used\": 0\n},\n\"eosio_any_linked_actions\": []\n}\n</code></pre> <p>\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u4e3b\u8981\u7684\u5b57\u6bb5\u7684\u610f\u601d\uff1a</p> <ul> <li><code>account_name</code>: \u8d26\u53f7\u540d\uff0c\u89c4\u5219\u5728\u4e0b\u4e00\u8282\u4e2d\u4f1a\u8bb2\u5230</li> <li><code>privileged</code>: <code>true</code>\u8868\u793a\u8d26\u53f7\u662f\u7279\u6743\u8d26\u53f7\uff0c\u5982<code>eosio</code>\u5373\u662f\u7279\u6743\u8d26\u53f7\u3002<code>false</code>\u5219\u8868\u793a\u666e\u901a\u8d26\u53f7</li> <li><code>last_code_update</code>: \u8d26\u53f7\u4e2d\u7684\u667a\u80fd\u5408\u7ea6\u7684\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u65f6\u95f4</li> <li><code>created</code>: \u8d26\u53f7\u7684\u521b\u5efa\u65f6\u95f4,</li> <li><code>core_liquid_balance</code>: \u8d26\u53f7\u7684\u53ef\u7528\u4f59\u989d,</li> <li><code>ram_quota</code>: \u8d26\u53f7\u5206\u914d\u7684\u603b\u5185\u5b58\uff0c\u7531\u4e8eEOS\u7684\u6570\u636e\u5e93\u662f\u5185\u5b58\u6570\u636e\u5e93\uff0c\u6240\u6709\u7684\u94fe\u4e0a\u6570\u636e\u90fd\u662f\u8981\u653e\u5230\u5185\u5b58\u4e2d\uff0c\u800c\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u5c06\u5185\u5b58\u4f5c\u4e3a\u4e00\u79cd\u8d44\u6e90\u6765\u5206\u914d\u7ed9\u8d26\u53f7\u3002</li> <li><code>net_weight</code>: \u8d26\u53f7\u5206\u914d\u5230\u7684\u7f51\u7edc\u8d44\u6e90\u7684\u6743\u91cd</li> <li><code>cpu_weight</code>: \u8d26\u53f7\u5206\u914d\u5230\u7684CPU\u8d44\u6e90\u7684\u6743\u91cd</li> <li><code>net_limit</code>\uff1a\u8d26\u53f7\u7684\u7f51\u7edc\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5</li> <li><code>cpu_limit</code>CPU\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5</li> <li><code>ram_usage</code>: \u5df2\u7ecf\u4f7f\u7528\u7684\u5185\u5b58</li> <li><code>permissions</code>: \u8d26\u53f7\u7684\u6743\u9650\uff0c\u8d26\u53f7\u7684\u6743\u9650\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u516c\u94a5\u6216\u8005\u8d26\u53f7\u7684\u4fe1\u606f\uff0c\u6bcf\u4e2a\u516c\u94a5\u548c\u8d26\u53f7\u7684\u6743\u9650\u53c8\u5360\u4e00\u5b9a\u7684\u6743\u91cd(weight)\uff0c\u5728\u53d1\u9001\u4ea4\u6613(transaction)\u65f6\uff0c\u5fc5\u987b\u7528\u516c\u94a5\u5bf9\u5e94\u7684\u79c1\u94a5\u5bf9\u4ea4\u6613\u8fdb\u884c\u7b7e\u540d\uff0c\u5e76\u4e14\u6743\u91cd\u8981\u5927\u4e8e\u7b49\u4e8e<code>threshold</code>\u65f6\uff0c\u8fd9\u4e2a\u4ea4\u6613\u624d\u80fd\u88abBP\u8ba4\u53ef\u3002\u5f53\u8d26\u53f7\u7684\u6743\u9650\u91cc\u5305\u542b\u7684\u4e0d\u662f\u516c\u94a5\u4fe1\u606f\uff0c\u800c\u662f\u6307\u5b9a\u7ee7\u627f\u81ea\u67d0\u4e2a\u8d26\u53f7\u7684\u6743\u9650\u4fe1\u606f\u65f6\uff0c\u5728\u7b7e\u540d\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u8fd9\u4e2a\u8d26\u53f7\u7684\u6743\u9650\u4fe1\u606f\u91cc\u63d0\u53d6\u51fa\u516c\u94a5\u4fe1\u606f\uff0c\u8fd9\u901a\u8fc7C++\u7a0b\u5e8f\u7684\u7b97\u6cd5\u6765\u5b9e\u73b0\u3002EOS\u7684RPC\u63a5\u53e3\u4e2d\u4e5f\u6709\u4e00\u4e2a<code>get_required_keys</code>\u63a5\u53e3\u6765\u83b7\u53d6\u7b7e\u540d\u7684\u516c\u94a5\u4fe1\u606f\u3002</li> <li><code>total_resources</code>\uff1a\u8fd9\u91cc\u6307\u5b9a\u7ec4\u8d26\u53f7\u5206\u914d\u7684NET\uff0cCPU\uff0c RAM\u7b49\u8d44\u6e90\u7684\u4fe1\u606f</li> </ul>"},{"location":"prelude/#name","title":"Name \u7ed3\u6784","text":"<p>name\u662fEOS\u4e2d\u7684\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u5e95\u5c42\u7528\u4e00\u4e2a64\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570(uint64_t)\u8868\u793a\u3002</p> <p>\u5728C++\u4e2d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>libraries/chain/include/eosio/chain/name.hpp</p> <pre><code>   struct name {\nuint64_t value = 0;\nbool empty()const { return 0 == value; }\nbool good()const  { return !empty();   }\n\nname( const char* str )   { set(str);           } name( const string&amp; str ) { set( str.c_str() ); }\n...\n}\n</code></pre> <p>\u4f46\u662f\u5728\u5e94\u7528\u5c42\u4f7f\u7528\u7684\u65f6\u5019\u90fd\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8868\u793a\u7684,\u5b57\u7b26\u4e32\u4e5f\u53ea\u80fd\u5305\u542b\u8fd9\u4e9b\u5b57\u7b26\uff1a\".12345abcdefghijklmnopqrstuvwxyz\"\u3002\u5b57\u7b26\u4e00\u517132\u4e2a\uff0c\u5206\u522b\u7528\u6765\u8868\u793a0\uff5e31\u8fd932\u4e2a\u6570\u5b57\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e9b\u5b57\u7b26\u4e32\u770b\u4f5c\u662f32\u8fdb\u5236\u7684\u6570\u636e\uff0c<code>uint64_t</code>\u4e2d\uff0c\u6bcf5\u4f4d\u8f6c\u6362\u6210\u4e00\u4e2a\u4e0a\u9762\u7684\u5b57\u7b26\uff0c\u7531\u4e8e<code>uint64_t</code>\u6700\u591a\u53ea\u670964\u4f4d\uff0c\u6240\u4ee5\u524d60\u4f4d\u53ef\u4ee5\u8868\u793a12\u4e2a\u5b57\u7b26\uff0c\u5b57\u7b26\u7684\u8303\u56f4\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u4e3a<code>[.1-5a-z]</code>\uff0c\u800c\u6700\u9ad8\u76844\u4f4d\uff0c\u53ea\u53ef\u4ee5\u752816\u4e2a\u5b57\u7b26\u6765\u8868\u793a\uff0c\u8fd916\u4e2a\u5b57\u7b26\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u8303\u56f4\u4e3a<code>[.1-5a-j]</code>\uff0c</p> <p>\u5728\u5177\u4f53\u7684\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u5728\u521b\u5efa\u8d26\u53f7\u7684\u65f6\u5019\uff0c\u7ecf\u5e38\u72af\u7684\u9519\u8bef\u5c31\u662f\u628a<code>6</code>\u5230<code>9</code>\uff0c<code>0</code>\u4ee5\u53ca\u5927\u5199\u7684\u5b57\u6bcd\u90fd\u4f5c\u4e3a\u6709\u6548\u7684\u5b57\u7b26\uff0c\u8fd8\u6709\u5c31\u662f\u6ca1\u6709\u628a\u957f\u5ea6\u9650\u5236\u572812\u4e2a\u5b57\u7b26\u4e4b\u5185\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff1a</p> <ul> <li>EOS\u4e2d\uff0cname\u7684\u503c\u5728\u5e95\u5c42\u5176\u5b9e\u662f\u4e00\u4e2a<code>uint64_t</code>\u7c7b\u578b\uff0c\u5728\u5e94\u7528\u5c42\u7684\u65f6\u5019\u624d\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6700\u591a\u53ef\u4ee5\u670913\u4e2a\u5b57\u7b26</li> <li>\u7b2c13\u4e2a\u5b57\u7b26\u7684\u8303\u56f4\u6bd4\u524d12\u4e2a\u5b57\u7b26\u80fd\u8868\u793a\u7684\u8303\u56f4\u5c0f\u3002</li> <li>\u5728\u7528name\u7ed3\u6784\u6765\u8868\u793a\u8d26\u53f7\uff08account\uff09\u540d\u65f6\uff0c\u6700\u591a\u53ea\u670912\u4e2a\u5b57\u7b26\u3002</li> <li>\u53e6\u5916\uff0cname\u7ed3\u6784\u4e5f\u7528\u6765\u8868\u793a\u4e00\u4e9b\u5176\u5b83\u7c7b\u578b\uff0c\u89c1\u4e0b\u9762\u7684C++\u4ee3\u7801\uff1a</li> </ul> <p>libraries/chain/include/eosio/chain/types.hpp</p> <pre><code>   using account_name     = name;\nusing action_name      = name;\nusing scope_name       = name;\nusing permission_name  = name;\nusing table_name       = name;\n</code></pre> <p>\u5728\u8fd9\u4e2aC++\u4ee3\u7801\u4e2d\uff0cname\u7ed3\u6784\u4e5f\u7528\u6765\u8868\u793aaction\uff0c table\u7684\u540d\u79f0\u7b49\u7b49\uff0c\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u540c\u4e8e\u8d26\u53f7(account)\u540d\uff0c\u5728\u7528\u5b57\u7b26\u4e32\u8868\u793a\u8fd9\u4e9b\u540d\u79f0\u65f6\uff0c\u6700\u591a\u53ef\u4ee5\u670913\u4e2a\u5b57\u7b26\uff0c\u4f46\u662f\u4e00\u822c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e60\u60ef\u4e0a\u7528\u7684\u65f6\u5019\u4e5f\u662f\u6700\u591a\u752812\u4e2a\u5b57\u7b26\u6765\u8868\u793a\u8fd9\u4e9b\u540d\u79f0\u3002</p>"},{"location":"prelude/#transaction","title":"Transaction \u7ed3\u6784","text":"<p>EOS\u4e0a\u57fa\u672c\u6570\u636e\u7ed3\u6784\u79f0\u4e3a\u4ea4\u6613\uff08Transaction\uff09\uff0c\u7531BP\u8d1f\u8d23\u5c06\u4e00\u6bb5\u65f6\u95f4\u5185\u6536\u96c6\u5230\u7684\u4ea4\u6613\u6253\u5305\u6210\u4e00\u4e2a\u533a\u5757\u3002\u667a\u80fd\u5408\u7ea6\u5f00\u53d1\u8005\u5fc5\u987b\u5145\u5206\u4e86\u89e3Transaction\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>libraries/chain/include/eosio/chain/transaction.hpp <pre><code>struct transaction_header {\ntime_point_sec         expiration;   ///&lt; the time at which a transaction expires\nuint16_t               ref_block_num       = 0U; ///&lt; specifies a block num in the last 2^16 blocks.\nuint32_t               ref_block_prefix    = 0UL; ///&lt; specifies the lower 32 bits of the blockid at get_ref_blocknum\nfc::unsigned_int       max_net_usage_words = 0UL; /// upper limit on total network bandwidth (in 8 byte words) billed for this transaction\nuint8_t                max_cpu_usage_ms    = 0; /// upper limit on the total CPU time billed for this transaction\nfc::unsigned_int       delay_sec           = 0UL; /// number of seconds to delay this transaction for during which it may be canceled.\n\n...\n};\n\nstruct transaction : public transaction_header {\nvector&lt;action&gt;         context_free_actions;\nvector&lt;action&gt;         actions;\nextensions_type        transaction_extensions;\n...\n};\n</code></pre></p> <p>\u7b80\u5355\u89e3\u91ca\u4e0b\u6bd4\u8f83\u91cd\u8981\u7684\u5b57\u6bb5\uff1a</p> <ul> <li><code>expiration</code>, \u8bbe\u7f6etransaction\u4e0a\u94fe\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u65f6\u5c06\u88ab\u62d2\u7edd\u52a0\u5165\u533a\u5757\u4e2d\u3002</li> <li><code>ref_block_num</code>, <code>ref_block_prefix</code> \u8fd9\u4e24\u4e2a\u6210\u5458\u53d8\u91cf\u662f\u7528\u6765\u9632\u6b62transaction\u5728fork\u94fe\u4e0a\u88ab\u91cd\u65b0\u5305\u542b\u8fdb\u533a\u5757\u800c\u8bbe\u8ba1\u7684\u3002</li> <li><code>actions</code>, \u8fd9\u662f\u4e00\u4e2aaction\u7684\u6570\u7ec4\u7ed3\u6784\uff0caction\u7684\u6982\u5ff5\u975e\u5e38\u91cd\u8981\uff0c\u6bcf\u4e00\u4e2aaction\u90fd\u5bf9\u5e94\u4e00\u4e2a\u94fe\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u51fd\u6570\uff0cBP\u5728\u5c06Transaction\u5305\u542b\u8fdb\u533a\u5757\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u6839\u636eaction\u6765\u8c03\u7528\u5bf9\u5e94\u7684\u667a\u80fd\u5408\u7ea6\u51fd\u6570\uff0c\u8fd9\u5c06\u5728\u4e0b\u9762\u7684\u4e00\u8282\u4e2d\u8be6\u7ec6\u89e3\u91ca\u3002</li> <li><code>context_free_actions</code>, \u8fd9\u540c\u6837\u662f\u4e00\u4e2aaction\u7684\u6570\u7ec4\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u5f53\u548caction\u76f8\u5bf9\u5e94\u7684\u667a\u80fd\u5408\u7ea6\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u6267\u884c\u7684\u4ee3\u7801\u88ab\u7981\u6b62\u8c03\u7528\u548c\u94fe\u4e0a\u6570\u636e\u5e93\u76f8\u5173\u7684API\u3002</li> </ul>"},{"location":"prelude/#action","title":"Action \u7ed3\u6784","text":"<p>Action\u7ed3\u6784\u5305\u542b\u5728Transaction\u7ed3\u6784\u4e2d\u3002\u4e00\u4e2aaction\u7ed3\u6784\u5728C++\u4ee3\u7801\u4e2d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>libraries/chain/include/eosio/chain/action.hpp</p> <pre><code>   struct action {\naccount_name               account;\naction_name                name;\nvector&lt;permission_level&gt;   authorization;\nbytes                      data;\n...\n}\n</code></pre> <p>\u5176\u4e2d\uff0cpermission_level\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p><pre><code>struct permission_level {\naccount_name    actor;\npermission_name permission;\n};\n</code></pre> \u7ed3\u6784\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u610f\u4e49\u89e3\u91ca\u5982\u4e0b\uff1a</p> <ul> <li><code>account</code>\u7528\u6765\u6307\u5b9a\u8981\u88ab\u8c03\u7528\u7684\u667a\u80fd\u5408\u7ea6\u7684\u8d26\u53f7\u540d</li> <li><code>name</code>\u88ab\u8c03\u7528\u7684action\u7684\u540d\u79f0</li> <li><code>authorization</code>\u6743\u9650\u6570\u7ec4</li> <li><code>data</code>action\u6240\u5305\u542b\u7684\u5df2\u7ecf\u88ab\u5e8f\u5217\u5316\u540e\u7684\u539f\u59cb\u6570\u636e\uff0c\u5728\u88ab\u667a\u80fd\u5408\u7ea6\u6240\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u88ab\u53cd\u5e8f\u5217\u5316\u6210\u5177\u4f53\u7684\u6570\u636e\u7ed3\u6784</li> </ul>"},{"location":"prelude/#abiapplication-binary-interface","title":"ABI(Application Binary Interface)","text":"<p>\u5728\u5f00\u53d1\u667a\u80fd\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u5728\u7f16\u8bd1\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728\u751f\u6210\u7684\u6bcf\u4e2a\u667a\u80fd\u5408\u7ea6\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801(.wasm)\u7684\u540c\u65f6\uff0c\u90fd\u4f1a\u751f\u6210\u4e00\u4e2aABI\u6587\u4ef6(.abi)\u3002\u4f46\u662f\u8981\u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u5e76\u4e0d\u662f\u8c03\u7528\u94fe\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u6240\u5fc5\u987b\u7684\u3002\u5b83\u7684\u4f5c\u7528\u662f\u65b9\u4fbf\u5f00\u53d1\u8005\u80fd\u591f\u83b7\u53d6\u76f8\u5173\u7684action\u7684\u4fe1\u606f\uff0c\u4ee5\u6784\u9020\u76f8\u5e94\u7684Transaction\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u65b9\u4fbf\u548c\u533a\u5757\u94fe\u8fdb\u884c\u4ea4\u4e92\u3002</p> <p>\u4e00\u4e2aABI\u6587\u4ef6\u7684\u5185\u5bb9\u662fjson\u683c\u5f0f\u7684\u6570\u636e\uff0c\u50cf\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\uff1a</p> <pre><code>{\n\"version\": \"eosio::abi/1.2\",\n\"structs\": [\n{\n\"name\": \"A\",\n\"base\": \"\",\n\"fields\": [\n{\n\"name\": \"a\",\n\"type\": \"uint64\"\n},\n{\n\"name\": \"b\",\n\"type\": \"uint64\"\n},\n{\n\"name\": \"c\",\n\"type\": \"uint128\"\n}\n]\n},\n{\n\"name\": \"test\",\n\"base\": \"\",\n\"fields\": []\n}\n],\n\"actions\": [\n{\n\"name\": \"test\",\n\"type\": \"test\",\n\"ricardian_contract\": \"\"\n}\n],\n\"tables\": [\n{\n\"name\": \"mytable\",\n\"type\": \"A\",\n\"index_type\": \"i64\",\n\"key_names\": [],\n\"key_types\": []\n}\n],\n\"ricardian_clauses\": []\n}\n</code></pre> <ul> <li><code>version</code>\u7528\u6765\u6307\u5b9aABI\u7684\u7248\u672c</li> <li><code>structs</code>\u7528\u6765\u6307\u5b9a\u6570\u636e\u7ed3\u6784\uff0c\u4f1a\u5728<code>actions</code>\u548c<code>tables</code>\u8fd9\u4e24\u4e2a\u7ed3\u6784\u91cc\u88ab\u7528\u5230</li> <li><code>actions</code>\u7528\u6765\u63cf\u8ff0\u53ef\u4ee5\u667a\u80fd\u5408\u7ea6\u4e2d\u7684action\uff0c\u6bcf\u4e2aaction\u5b9e\u9645\u4e0a\u90fd\u662f\u5bf9\u5e94\u4e00\u4e2a\u667a\u80fd\u5408\u7ea6\u51fd\u6570</li> <li><code>tables</code>\u7528\u6765\u63cf\u8ff0\u8868\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\uff0c\u4f60\u7f51\u9875\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u901a\u8fc7<code>get_table_rows</code>\u8fd9\u4e2aRPC API\u6765\u67e5\u8be2\u94fe\u4e0a\u7684\u6570\u636e\u5e93\u4fe1\u606f</li> </ul>"}]}